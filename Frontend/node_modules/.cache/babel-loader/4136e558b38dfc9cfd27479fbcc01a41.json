{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport TreeViewContext from './TreeViewContext';\nimport { withStyles } from '@material-ui/core/styles';\nimport { useControlled } from '@material-ui/core/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  }\n};\n\nfunction arrayDiff(arr1, arr2) {\n  if (arr1.length !== arr2.length) return true;\n\n  for (var i = 0; i < arr1.length; i += 1) {\n    if (arr1[i] !== arr2[i]) return true;\n  }\n\n  return false;\n}\n\nvar findNextFirstChar = function findNextFirstChar(firstChars, startIndex, char) {\n  for (var i = startIndex; i < firstChars.length; i += 1) {\n    if (char === firstChars[i]) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\nvar defaultExpandedDefault = [];\nvar defaultSelectedDefault = [];\nvar TreeView = React.forwardRef(function TreeView(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      defaultCollapseIcon = props.defaultCollapseIcon,\n      defaultEndIcon = props.defaultEndIcon,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? defaultExpandedDefault : _props$defaultExpande,\n      defaultExpandIcon = props.defaultExpandIcon,\n      defaultParentIcon = props.defaultParentIcon,\n      _props$defaultSelecte = props.defaultSelected,\n      defaultSelected = _props$defaultSelecte === void 0 ? defaultSelectedDefault : _props$defaultSelecte,\n      _props$disableSelecti = props.disableSelection,\n      disableSelection = _props$disableSelecti === void 0 ? false : _props$disableSelecti,\n      _props$multiSelect = props.multiSelect,\n      multiSelect = _props$multiSelect === void 0 ? false : _props$multiSelect,\n      expandedProp = props.expanded,\n      onNodeSelect = props.onNodeSelect,\n      onNodeToggle = props.onNodeToggle,\n      selectedProp = props.selected,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultCollapseIcon\", \"defaultEndIcon\", \"defaultExpanded\", \"defaultExpandIcon\", \"defaultParentIcon\", \"defaultSelected\", \"disableSelection\", \"multiSelect\", \"expanded\", \"onNodeSelect\", \"onNodeToggle\", \"selected\"]);\n\n  var _React$useState = React.useState(null),\n      tabbable = _React$useState[0],\n      setTabbable = _React$useState[1];\n\n  var _React$useState2 = React.useState(null),\n      focusedNodeId = _React$useState2[0],\n      setFocusedNodeId = _React$useState2[1];\n\n  var nodeMap = React.useRef({});\n  var firstCharMap = React.useRef({});\n  var visibleNodes = React.useRef([]);\n\n  var _useControlled = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'TreeView',\n    state: 'expanded'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var _useControlled3 = useControlled({\n    controlled: selectedProp,\n    default: defaultSelected,\n    name: 'TreeView',\n    state: 'selected'\n  }),\n      _useControlled4 = _slicedToArray(_useControlled3, 2),\n      selected = _useControlled4[0],\n      setSelectedState = _useControlled4[1];\n  /*\n   * Status Helpers\n   */\n\n\n  var isExpanded = React.useCallback(function (id) {\n    return Array.isArray(expanded) ? expanded.indexOf(id) !== -1 : false;\n  }, [expanded]);\n  var isSelected = React.useCallback(function (id) {\n    return Array.isArray(selected) ? selected.indexOf(id) !== -1 : selected === id;\n  }, [selected]);\n\n  var isTabbable = function isTabbable(id) {\n    return tabbable === id;\n  };\n\n  var isFocused = function isFocused(id) {\n    return focusedNodeId === id;\n  };\n  /*\n   * Node Helpers\n   */\n\n\n  var getNextNode = function getNextNode(id) {\n    var nodeIndex = visibleNodes.current.indexOf(id);\n\n    if (nodeIndex !== -1 && nodeIndex + 1 < visibleNodes.current.length) {\n      return visibleNodes.current[nodeIndex + 1];\n    }\n\n    return null;\n  };\n\n  var getPreviousNode = function getPreviousNode(id) {\n    var nodeIndex = visibleNodes.current.indexOf(id);\n\n    if (nodeIndex !== -1 && nodeIndex - 1 >= 0) {\n      return visibleNodes.current[nodeIndex - 1];\n    }\n\n    return null;\n  };\n\n  var getLastNode = function getLastNode() {\n    return visibleNodes.current[visibleNodes.current.length - 1];\n  };\n\n  var getFirstNode = function getFirstNode() {\n    return visibleNodes.current[0];\n  };\n\n  var getParent = function getParent(id) {\n    return nodeMap.current[id].parent;\n  };\n\n  var getNodesInRange = function getNodesInRange(a, b) {\n    var aIndex = visibleNodes.current.indexOf(a);\n    var bIndex = visibleNodes.current.indexOf(b);\n    var start = Math.min(aIndex, bIndex);\n    var end = Math.max(aIndex, bIndex);\n    return visibleNodes.current.slice(start, end + 1);\n  };\n  /*\n   * Focus Helpers\n   */\n\n\n  var focus = function focus(id) {\n    if (id) {\n      setTabbable(id);\n      setFocusedNodeId(id);\n    }\n  };\n\n  var focusNextNode = function focusNextNode(id) {\n    return focus(getNextNode(id));\n  };\n\n  var focusPreviousNode = function focusPreviousNode(id) {\n    return focus(getPreviousNode(id));\n  };\n\n  var focusFirstNode = function focusFirstNode() {\n    return focus(getFirstNode());\n  };\n\n  var focusLastNode = function focusLastNode() {\n    return focus(getLastNode());\n  };\n\n  var focusByFirstCharacter = function focusByFirstCharacter(id, char) {\n    var start;\n    var index;\n    var lowercaseChar = char.toLowerCase();\n    var firstCharIds = [];\n    var firstChars = []; // This really only works since the ids are strings\n\n    Object.keys(firstCharMap.current).forEach(function (nodeId) {\n      var firstChar = firstCharMap.current[nodeId];\n      var map = nodeMap.current[nodeId];\n      var visible = map.parent ? isExpanded(map.parent) : true;\n\n      if (visible) {\n        firstCharIds.push(nodeId);\n        firstChars.push(firstChar);\n      }\n    }); // Get start index for search based on position of currentItem\n\n    start = firstCharIds.indexOf(id) + 1;\n\n    if (start === nodeMap.current.length) {\n      start = 0;\n    } // Check remaining slots in the menu\n\n\n    index = findNextFirstChar(firstChars, start, lowercaseChar); // If not found in remaining slots, check from beginning\n\n    if (index === -1) {\n      index = findNextFirstChar(firstChars, 0, lowercaseChar);\n    } // If match was found...\n\n\n    if (index > -1) {\n      focus(firstCharIds[index]);\n    }\n  };\n  /*\n   * Expansion Helpers\n   */\n\n\n  var toggleExpansion = function toggleExpansion(event) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : focusedNodeId;\n    var newExpanded;\n\n    if (expanded.indexOf(value) !== -1) {\n      newExpanded = expanded.filter(function (id) {\n        return id !== value;\n      });\n      setTabbable(function (oldTabbable) {\n        var map = nodeMap.current[oldTabbable];\n\n        if (oldTabbable && (map && map.parent ? map.parent.id : null) === value) {\n          return value;\n        }\n\n        return oldTabbable;\n      });\n    } else {\n      newExpanded = [value].concat(_toConsumableArray(expanded));\n    }\n\n    if (onNodeToggle) {\n      onNodeToggle(event, newExpanded);\n    }\n\n    setExpandedState(newExpanded);\n  };\n\n  var expandAllSiblings = function expandAllSiblings(event, id) {\n    var map = nodeMap.current[id];\n    var parent = nodeMap.current[map.parent];\n    var diff;\n\n    if (parent) {\n      diff = parent.children.filter(function (child) {\n        return !isExpanded(child);\n      });\n    } else {\n      var topLevelNodes = nodeMap.current[-1].children;\n      diff = topLevelNodes.filter(function (node) {\n        return !isExpanded(node);\n      });\n    }\n\n    var newExpanded = [].concat(_toConsumableArray(expanded), _toConsumableArray(diff));\n\n    if (diff.length > 0) {\n      setExpandedState(newExpanded);\n\n      if (onNodeToggle) {\n        onNodeToggle(event, newExpanded);\n      }\n    }\n  };\n  /*\n   * Selection Helpers\n   */\n\n\n  var lastSelectedNode = React.useRef(null);\n  var lastSelectionWasRange = React.useRef(false);\n  var currentRangeSelection = React.useRef([]);\n\n  var handleRangeArrowSelect = function handleRangeArrowSelect(event, nodes) {\n    var base = selected;\n    var start = nodes.start,\n        next = nodes.next,\n        current = nodes.current;\n\n    if (!next || !current) {\n      return;\n    }\n\n    if (currentRangeSelection.current.indexOf(current) === -1) {\n      currentRangeSelection.current = [];\n    }\n\n    if (lastSelectionWasRange.current) {\n      if (currentRangeSelection.current.indexOf(next) !== -1) {\n        base = base.filter(function (id) {\n          return id === start || id !== current;\n        });\n        currentRangeSelection.current = currentRangeSelection.current.filter(function (id) {\n          return id === start || id !== current;\n        });\n      } else {\n        base.push(next);\n        currentRangeSelection.current.push(next);\n      }\n    } else {\n      base.push(next);\n      currentRangeSelection.current.push(current, next);\n    }\n\n    if (onNodeSelect) {\n      onNodeSelect(event, base);\n    }\n\n    setSelectedState(base);\n  };\n\n  var handleRangeSelect = function handleRangeSelect(event, nodes) {\n    var base = selected;\n    var start = nodes.start,\n        end = nodes.end; // If last selection was a range selection ignore nodes that were selected.\n\n    if (lastSelectionWasRange.current) {\n      base = selected.filter(function (id) {\n        return currentRangeSelection.current.indexOf(id) === -1;\n      });\n    }\n\n    var range = getNodesInRange(start, end);\n    currentRangeSelection.current = range;\n    var newSelected = base.concat(range);\n    newSelected = newSelected.filter(function (id, i) {\n      return newSelected.indexOf(id) === i;\n    });\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var handleMultipleSelect = function handleMultipleSelect(event, value) {\n    var newSelected = [];\n\n    if (selected.indexOf(value) !== -1) {\n      newSelected = selected.filter(function (id) {\n        return id !== value;\n      });\n    } else {\n      newSelected = [value].concat(_toConsumableArray(selected));\n    }\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var handleSingleSelect = function handleSingleSelect(event, value) {\n    var newSelected = multiSelect ? [value] : value;\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var selectNode = function selectNode(event, id) {\n    var multiple = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (id) {\n      if (multiple) {\n        handleMultipleSelect(event, id);\n      } else {\n        handleSingleSelect(event, id);\n      }\n\n      lastSelectedNode.current = id;\n      lastSelectionWasRange.current = false;\n      currentRangeSelection.current = [];\n      return true;\n    }\n\n    return false;\n  };\n\n  var selectRange = function selectRange(event, nodes) {\n    var stacked = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var _nodes$start = nodes.start,\n        start = _nodes$start === void 0 ? lastSelectedNode.current : _nodes$start,\n        end = nodes.end,\n        current = nodes.current;\n\n    if (stacked) {\n      handleRangeArrowSelect(event, {\n        start: start,\n        next: end,\n        current: current\n      });\n    } else {\n      handleRangeSelect(event, {\n        start: start,\n        end: end\n      });\n    }\n\n    lastSelectionWasRange.current = true;\n    return true;\n  };\n\n  var rangeSelectToFirst = function rangeSelectToFirst(event, id) {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n\n    var start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    return selectRange(event, {\n      start: start,\n      end: getFirstNode()\n    });\n  };\n\n  var rangeSelectToLast = function rangeSelectToLast(event, id) {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n\n    var start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    return selectRange(event, {\n      start: start,\n      end: getLastNode()\n    });\n  };\n\n  var selectNextNode = function selectNextNode(event, id) {\n    return selectRange(event, {\n      end: getNextNode(id),\n      current: id\n    }, true);\n  };\n\n  var selectPreviousNode = function selectPreviousNode(event, id) {\n    return selectRange(event, {\n      end: getPreviousNode(id),\n      current: id\n    }, true);\n  };\n\n  var selectAllNodes = function selectAllNodes(event) {\n    return selectRange(event, {\n      start: getFirstNode(),\n      end: getLastNode()\n    });\n  };\n  /*\n   * Mapping Helpers\n   */\n\n\n  var addNodeToNodeMap = function addNodeToNodeMap(id, childrenIds) {\n    var currentMap = nodeMap.current[id];\n    nodeMap.current[id] = _extends(_extends({}, currentMap), {}, {\n      children: childrenIds,\n      id: id\n    });\n    childrenIds.forEach(function (childId) {\n      var currentChildMap = nodeMap.current[childId];\n      nodeMap.current[childId] = _extends(_extends({}, currentChildMap), {}, {\n        parent: id,\n        id: childId\n      });\n    });\n  };\n\n  var getNodesToRemove = React.useCallback(function (id) {\n    var map = nodeMap.current[id];\n    var nodes = [];\n\n    if (map) {\n      nodes.push(id);\n\n      if (map.children) {\n        nodes.push.apply(nodes, _toConsumableArray(map.children));\n        map.children.forEach(function (node) {\n          nodes.push.apply(nodes, _toConsumableArray(getNodesToRemove(node)));\n        });\n      }\n    }\n\n    return nodes;\n  }, []);\n  var cleanUpFirstCharMap = React.useCallback(function (nodes) {\n    var newMap = _extends({}, firstCharMap.current);\n\n    nodes.forEach(function (node) {\n      if (newMap[node]) {\n        delete newMap[node];\n      }\n    });\n    firstCharMap.current = newMap;\n  }, []);\n  var removeNodeFromNodeMap = React.useCallback(function (id) {\n    var nodes = getNodesToRemove(id);\n    cleanUpFirstCharMap(nodes);\n\n    var newMap = _extends({}, nodeMap.current);\n\n    nodes.forEach(function (node) {\n      var map = newMap[node];\n\n      if (map) {\n        if (map.parent) {\n          var parentMap = newMap[map.parent];\n\n          if (parentMap && parentMap.children) {\n            var parentChildren = parentMap.children.filter(function (c) {\n              return c !== node;\n            });\n            newMap[map.parent] = _extends(_extends({}, parentMap), {}, {\n              children: parentChildren\n            });\n          }\n        }\n\n        delete newMap[node];\n      }\n    });\n    nodeMap.current = newMap;\n    setFocusedNodeId(function (oldFocusedNodeId) {\n      if (oldFocusedNodeId === id) {\n        return null;\n      }\n\n      return oldFocusedNodeId;\n    });\n  }, [getNodesToRemove, cleanUpFirstCharMap]);\n\n  var mapFirstChar = function mapFirstChar(id, firstChar) {\n    firstCharMap.current[id] = firstChar;\n  };\n\n  var prevChildIds = React.useRef([]);\n\n  var _React$useState3 = React.useState(false),\n      childrenCalculated = _React$useState3[0],\n      setChildrenCalculated = _React$useState3[1];\n\n  React.useEffect(function () {\n    var childIds = [];\n    React.Children.forEach(children, function (child) {\n      if (React.isValidElement(child) && child.props.nodeId) {\n        childIds.push(child.props.nodeId);\n      }\n    });\n\n    if (arrayDiff(prevChildIds.current, childIds)) {\n      nodeMap.current[-1] = {\n        parent: null,\n        children: childIds\n      };\n      childIds.forEach(function (id, index) {\n        if (index === 0) {\n          setTabbable(id);\n        }\n      });\n      visibleNodes.current = nodeMap.current[-1].children;\n      prevChildIds.current = childIds;\n      setChildrenCalculated(true);\n    }\n  }, [children]);\n  React.useEffect(function () {\n    var buildVisible = function buildVisible(nodes) {\n      var list = [];\n\n      for (var i = 0; i < nodes.length; i += 1) {\n        var item = nodes[i];\n        list.push(item);\n        var childs = nodeMap.current[item].children;\n\n        if (isExpanded(item) && childs) {\n          list = list.concat(buildVisible(childs));\n        }\n      }\n\n      return list;\n    };\n\n    if (childrenCalculated) {\n      visibleNodes.current = buildVisible(nodeMap.current[-1].children);\n    }\n  }, [expanded, childrenCalculated, isExpanded, children]);\n\n  var noopSelection = function noopSelection() {\n    return false;\n  };\n\n  return /*#__PURE__*/React.createElement(TreeViewContext.Provider, {\n    value: {\n      icons: {\n        defaultCollapseIcon: defaultCollapseIcon,\n        defaultExpandIcon: defaultExpandIcon,\n        defaultParentIcon: defaultParentIcon,\n        defaultEndIcon: defaultEndIcon\n      },\n      focus: focus,\n      focusFirstNode: focusFirstNode,\n      focusLastNode: focusLastNode,\n      focusNextNode: focusNextNode,\n      focusPreviousNode: focusPreviousNode,\n      focusByFirstCharacter: focusByFirstCharacter,\n      expandAllSiblings: expandAllSiblings,\n      toggleExpansion: toggleExpansion,\n      isExpanded: isExpanded,\n      isFocused: isFocused,\n      isSelected: isSelected,\n      selectNode: disableSelection ? noopSelection : selectNode,\n      selectRange: disableSelection ? noopSelection : selectRange,\n      selectNextNode: disableSelection ? noopSelection : selectNextNode,\n      selectPreviousNode: disableSelection ? noopSelection : selectPreviousNode,\n      rangeSelectToFirst: disableSelection ? noopSelection : rangeSelectToFirst,\n      rangeSelectToLast: disableSelection ? noopSelection : rangeSelectToLast,\n      selectAllNodes: disableSelection ? noopSelection : selectAllNodes,\n      isTabbable: isTabbable,\n      multiSelect: multiSelect,\n      getParent: getParent,\n      mapFirstChar: mapFirstChar,\n      addNodeToNodeMap: addNodeToNodeMap,\n      removeNodeFromNodeMap: removeNodeFromNodeMap\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", _extends({\n    role: \"tree\",\n    \"aria-multiselectable\": multiSelect,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeView.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default icon used to collapse the node.\n   */\n  defaultCollapseIcon: PropTypes.node,\n\n  /**\n   * The default icon displayed next to a end node. This is applied to all\n   * tree nodes and can be overridden by the TreeItem `icon` prop.\n   */\n  defaultEndIcon: PropTypes.node,\n\n  /**\n   * Expanded node ids. (Uncontrolled)\n   */\n  defaultExpanded: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * The default icon used to expand the node.\n   */\n  defaultExpandIcon: PropTypes.node,\n\n  /**\n   * The default icon displayed next to a parent node. This is applied to all\n   * parent nodes and can be overridden by the TreeItem `icon` prop.\n   */\n  defaultParentIcon: PropTypes.node,\n\n  /**\n   * Selected node ids. (Uncontrolled)\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\n   */\n  defaultSelected: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string]),\n\n  /**\n   * If `true` selection is disabled.\n   */\n  disableSelection: PropTypes.bool,\n\n  /**\n   * Expanded node ids. (Controlled)\n   */\n  expanded: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * If true `ctrl` and `shift` will trigger multiselect.\n   */\n  multiSelect: PropTypes.bool,\n\n  /**\n   * Callback fired when tree items are selected/unselected.\n   *\n   * @param {object} event The event source of the callback\n   * @param {(array|string)} value of the selected nodes. When `multiSelect` is true\n   * this is an array of strings; when false (default) a string.\n   */\n  onNodeSelect: PropTypes.func,\n\n  /**\n   * Callback fired when tree items are expanded/collapsed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {array} nodeIds The ids of the expanded nodes.\n   */\n  onNodeToggle: PropTypes.func,\n\n  /**\n   * Selected node ids. (Controlled)\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\n   */\n  selected: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTreeView'\n})(TreeView);","map":{"version":3,"sources":["/Users/mac/Documents/Projects/Scholastic-Quiz/node_modules/@material-ui/lab/esm/TreeView/TreeView.js"],"names":["_extends","_toConsumableArray","_slicedToArray","_objectWithoutProperties","React","clsx","PropTypes","TreeViewContext","withStyles","useControlled","styles","root","padding","margin","listStyle","arrayDiff","arr1","arr2","length","i","findNextFirstChar","firstChars","startIndex","char","defaultExpandedDefault","defaultSelectedDefault","TreeView","forwardRef","props","ref","children","classes","className","defaultCollapseIcon","defaultEndIcon","_props$defaultExpande","defaultExpanded","defaultExpandIcon","defaultParentIcon","_props$defaultSelecte","defaultSelected","_props$disableSelecti","disableSelection","_props$multiSelect","multiSelect","expandedProp","expanded","onNodeSelect","onNodeToggle","selectedProp","selected","other","_React$useState","useState","tabbable","setTabbable","_React$useState2","focusedNodeId","setFocusedNodeId","nodeMap","useRef","firstCharMap","visibleNodes","_useControlled","controlled","default","name","state","_useControlled2","setExpandedState","_useControlled3","_useControlled4","setSelectedState","isExpanded","useCallback","id","Array","isArray","indexOf","isSelected","isTabbable","isFocused","getNextNode","nodeIndex","current","getPreviousNode","getLastNode","getFirstNode","getParent","parent","getNodesInRange","a","b","aIndex","bIndex","start","Math","min","end","max","slice","focus","focusNextNode","focusPreviousNode","focusFirstNode","focusLastNode","focusByFirstCharacter","index","lowercaseChar","toLowerCase","firstCharIds","Object","keys","forEach","nodeId","firstChar","map","visible","push","toggleExpansion","event","value","arguments","undefined","newExpanded","filter","oldTabbable","concat","expandAllSiblings","diff","child","topLevelNodes","node","lastSelectedNode","lastSelectionWasRange","currentRangeSelection","handleRangeArrowSelect","nodes","base","next","handleRangeSelect","range","newSelected","handleMultipleSelect","handleSingleSelect","selectNode","multiple","selectRange","stacked","_nodes$start","rangeSelectToFirst","rangeSelectToLast","selectNextNode","selectPreviousNode","selectAllNodes","addNodeToNodeMap","childrenIds","currentMap","childId","currentChildMap","getNodesToRemove","apply","cleanUpFirstCharMap","newMap","removeNodeFromNodeMap","parentMap","parentChildren","c","oldFocusedNodeId","mapFirstChar","prevChildIds","_React$useState3","childrenCalculated","setChildrenCalculated","useEffect","childIds","Children","isValidElement","buildVisible","list","item","childs","noopSelection","createElement","Provider","icons","role","process","env","NODE_ENV","propTypes","object","string","arrayOf","oneOfType","bool","func"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport TreeViewContext from './TreeViewContext';\nimport { withStyles } from '@material-ui/core/styles';\nimport { useControlled } from '@material-ui/core/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  }\n};\n\nfunction arrayDiff(arr1, arr2) {\n  if (arr1.length !== arr2.length) return true;\n\n  for (var i = 0; i < arr1.length; i += 1) {\n    if (arr1[i] !== arr2[i]) return true;\n  }\n\n  return false;\n}\n\nvar findNextFirstChar = function findNextFirstChar(firstChars, startIndex, char) {\n  for (var i = startIndex; i < firstChars.length; i += 1) {\n    if (char === firstChars[i]) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\nvar defaultExpandedDefault = [];\nvar defaultSelectedDefault = [];\nvar TreeView = React.forwardRef(function TreeView(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      defaultCollapseIcon = props.defaultCollapseIcon,\n      defaultEndIcon = props.defaultEndIcon,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? defaultExpandedDefault : _props$defaultExpande,\n      defaultExpandIcon = props.defaultExpandIcon,\n      defaultParentIcon = props.defaultParentIcon,\n      _props$defaultSelecte = props.defaultSelected,\n      defaultSelected = _props$defaultSelecte === void 0 ? defaultSelectedDefault : _props$defaultSelecte,\n      _props$disableSelecti = props.disableSelection,\n      disableSelection = _props$disableSelecti === void 0 ? false : _props$disableSelecti,\n      _props$multiSelect = props.multiSelect,\n      multiSelect = _props$multiSelect === void 0 ? false : _props$multiSelect,\n      expandedProp = props.expanded,\n      onNodeSelect = props.onNodeSelect,\n      onNodeToggle = props.onNodeToggle,\n      selectedProp = props.selected,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultCollapseIcon\", \"defaultEndIcon\", \"defaultExpanded\", \"defaultExpandIcon\", \"defaultParentIcon\", \"defaultSelected\", \"disableSelection\", \"multiSelect\", \"expanded\", \"onNodeSelect\", \"onNodeToggle\", \"selected\"]);\n\n  var _React$useState = React.useState(null),\n      tabbable = _React$useState[0],\n      setTabbable = _React$useState[1];\n\n  var _React$useState2 = React.useState(null),\n      focusedNodeId = _React$useState2[0],\n      setFocusedNodeId = _React$useState2[1];\n\n  var nodeMap = React.useRef({});\n  var firstCharMap = React.useRef({});\n  var visibleNodes = React.useRef([]);\n\n  var _useControlled = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'TreeView',\n    state: 'expanded'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var _useControlled3 = useControlled({\n    controlled: selectedProp,\n    default: defaultSelected,\n    name: 'TreeView',\n    state: 'selected'\n  }),\n      _useControlled4 = _slicedToArray(_useControlled3, 2),\n      selected = _useControlled4[0],\n      setSelectedState = _useControlled4[1];\n  /*\n   * Status Helpers\n   */\n\n\n  var isExpanded = React.useCallback(function (id) {\n    return Array.isArray(expanded) ? expanded.indexOf(id) !== -1 : false;\n  }, [expanded]);\n  var isSelected = React.useCallback(function (id) {\n    return Array.isArray(selected) ? selected.indexOf(id) !== -1 : selected === id;\n  }, [selected]);\n\n  var isTabbable = function isTabbable(id) {\n    return tabbable === id;\n  };\n\n  var isFocused = function isFocused(id) {\n    return focusedNodeId === id;\n  };\n  /*\n   * Node Helpers\n   */\n\n\n  var getNextNode = function getNextNode(id) {\n    var nodeIndex = visibleNodes.current.indexOf(id);\n\n    if (nodeIndex !== -1 && nodeIndex + 1 < visibleNodes.current.length) {\n      return visibleNodes.current[nodeIndex + 1];\n    }\n\n    return null;\n  };\n\n  var getPreviousNode = function getPreviousNode(id) {\n    var nodeIndex = visibleNodes.current.indexOf(id);\n\n    if (nodeIndex !== -1 && nodeIndex - 1 >= 0) {\n      return visibleNodes.current[nodeIndex - 1];\n    }\n\n    return null;\n  };\n\n  var getLastNode = function getLastNode() {\n    return visibleNodes.current[visibleNodes.current.length - 1];\n  };\n\n  var getFirstNode = function getFirstNode() {\n    return visibleNodes.current[0];\n  };\n\n  var getParent = function getParent(id) {\n    return nodeMap.current[id].parent;\n  };\n\n  var getNodesInRange = function getNodesInRange(a, b) {\n    var aIndex = visibleNodes.current.indexOf(a);\n    var bIndex = visibleNodes.current.indexOf(b);\n    var start = Math.min(aIndex, bIndex);\n    var end = Math.max(aIndex, bIndex);\n    return visibleNodes.current.slice(start, end + 1);\n  };\n  /*\n   * Focus Helpers\n   */\n\n\n  var focus = function focus(id) {\n    if (id) {\n      setTabbable(id);\n      setFocusedNodeId(id);\n    }\n  };\n\n  var focusNextNode = function focusNextNode(id) {\n    return focus(getNextNode(id));\n  };\n\n  var focusPreviousNode = function focusPreviousNode(id) {\n    return focus(getPreviousNode(id));\n  };\n\n  var focusFirstNode = function focusFirstNode() {\n    return focus(getFirstNode());\n  };\n\n  var focusLastNode = function focusLastNode() {\n    return focus(getLastNode());\n  };\n\n  var focusByFirstCharacter = function focusByFirstCharacter(id, char) {\n    var start;\n    var index;\n    var lowercaseChar = char.toLowerCase();\n    var firstCharIds = [];\n    var firstChars = []; // This really only works since the ids are strings\n\n    Object.keys(firstCharMap.current).forEach(function (nodeId) {\n      var firstChar = firstCharMap.current[nodeId];\n      var map = nodeMap.current[nodeId];\n      var visible = map.parent ? isExpanded(map.parent) : true;\n\n      if (visible) {\n        firstCharIds.push(nodeId);\n        firstChars.push(firstChar);\n      }\n    }); // Get start index for search based on position of currentItem\n\n    start = firstCharIds.indexOf(id) + 1;\n\n    if (start === nodeMap.current.length) {\n      start = 0;\n    } // Check remaining slots in the menu\n\n\n    index = findNextFirstChar(firstChars, start, lowercaseChar); // If not found in remaining slots, check from beginning\n\n    if (index === -1) {\n      index = findNextFirstChar(firstChars, 0, lowercaseChar);\n    } // If match was found...\n\n\n    if (index > -1) {\n      focus(firstCharIds[index]);\n    }\n  };\n  /*\n   * Expansion Helpers\n   */\n\n\n  var toggleExpansion = function toggleExpansion(event) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : focusedNodeId;\n    var newExpanded;\n\n    if (expanded.indexOf(value) !== -1) {\n      newExpanded = expanded.filter(function (id) {\n        return id !== value;\n      });\n      setTabbable(function (oldTabbable) {\n        var map = nodeMap.current[oldTabbable];\n\n        if (oldTabbable && (map && map.parent ? map.parent.id : null) === value) {\n          return value;\n        }\n\n        return oldTabbable;\n      });\n    } else {\n      newExpanded = [value].concat(_toConsumableArray(expanded));\n    }\n\n    if (onNodeToggle) {\n      onNodeToggle(event, newExpanded);\n    }\n\n    setExpandedState(newExpanded);\n  };\n\n  var expandAllSiblings = function expandAllSiblings(event, id) {\n    var map = nodeMap.current[id];\n    var parent = nodeMap.current[map.parent];\n    var diff;\n\n    if (parent) {\n      diff = parent.children.filter(function (child) {\n        return !isExpanded(child);\n      });\n    } else {\n      var topLevelNodes = nodeMap.current[-1].children;\n      diff = topLevelNodes.filter(function (node) {\n        return !isExpanded(node);\n      });\n    }\n\n    var newExpanded = [].concat(_toConsumableArray(expanded), _toConsumableArray(diff));\n\n    if (diff.length > 0) {\n      setExpandedState(newExpanded);\n\n      if (onNodeToggle) {\n        onNodeToggle(event, newExpanded);\n      }\n    }\n  };\n  /*\n   * Selection Helpers\n   */\n\n\n  var lastSelectedNode = React.useRef(null);\n  var lastSelectionWasRange = React.useRef(false);\n  var currentRangeSelection = React.useRef([]);\n\n  var handleRangeArrowSelect = function handleRangeArrowSelect(event, nodes) {\n    var base = selected;\n    var start = nodes.start,\n        next = nodes.next,\n        current = nodes.current;\n\n    if (!next || !current) {\n      return;\n    }\n\n    if (currentRangeSelection.current.indexOf(current) === -1) {\n      currentRangeSelection.current = [];\n    }\n\n    if (lastSelectionWasRange.current) {\n      if (currentRangeSelection.current.indexOf(next) !== -1) {\n        base = base.filter(function (id) {\n          return id === start || id !== current;\n        });\n        currentRangeSelection.current = currentRangeSelection.current.filter(function (id) {\n          return id === start || id !== current;\n        });\n      } else {\n        base.push(next);\n        currentRangeSelection.current.push(next);\n      }\n    } else {\n      base.push(next);\n      currentRangeSelection.current.push(current, next);\n    }\n\n    if (onNodeSelect) {\n      onNodeSelect(event, base);\n    }\n\n    setSelectedState(base);\n  };\n\n  var handleRangeSelect = function handleRangeSelect(event, nodes) {\n    var base = selected;\n    var start = nodes.start,\n        end = nodes.end; // If last selection was a range selection ignore nodes that were selected.\n\n    if (lastSelectionWasRange.current) {\n      base = selected.filter(function (id) {\n        return currentRangeSelection.current.indexOf(id) === -1;\n      });\n    }\n\n    var range = getNodesInRange(start, end);\n    currentRangeSelection.current = range;\n    var newSelected = base.concat(range);\n    newSelected = newSelected.filter(function (id, i) {\n      return newSelected.indexOf(id) === i;\n    });\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var handleMultipleSelect = function handleMultipleSelect(event, value) {\n    var newSelected = [];\n\n    if (selected.indexOf(value) !== -1) {\n      newSelected = selected.filter(function (id) {\n        return id !== value;\n      });\n    } else {\n      newSelected = [value].concat(_toConsumableArray(selected));\n    }\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var handleSingleSelect = function handleSingleSelect(event, value) {\n    var newSelected = multiSelect ? [value] : value;\n\n    if (onNodeSelect) {\n      onNodeSelect(event, newSelected);\n    }\n\n    setSelectedState(newSelected);\n  };\n\n  var selectNode = function selectNode(event, id) {\n    var multiple = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (id) {\n      if (multiple) {\n        handleMultipleSelect(event, id);\n      } else {\n        handleSingleSelect(event, id);\n      }\n\n      lastSelectedNode.current = id;\n      lastSelectionWasRange.current = false;\n      currentRangeSelection.current = [];\n      return true;\n    }\n\n    return false;\n  };\n\n  var selectRange = function selectRange(event, nodes) {\n    var stacked = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var _nodes$start = nodes.start,\n        start = _nodes$start === void 0 ? lastSelectedNode.current : _nodes$start,\n        end = nodes.end,\n        current = nodes.current;\n\n    if (stacked) {\n      handleRangeArrowSelect(event, {\n        start: start,\n        next: end,\n        current: current\n      });\n    } else {\n      handleRangeSelect(event, {\n        start: start,\n        end: end\n      });\n    }\n\n    lastSelectionWasRange.current = true;\n    return true;\n  };\n\n  var rangeSelectToFirst = function rangeSelectToFirst(event, id) {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n\n    var start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    return selectRange(event, {\n      start: start,\n      end: getFirstNode()\n    });\n  };\n\n  var rangeSelectToLast = function rangeSelectToLast(event, id) {\n    if (!lastSelectedNode.current) {\n      lastSelectedNode.current = id;\n    }\n\n    var start = lastSelectionWasRange.current ? lastSelectedNode.current : id;\n    return selectRange(event, {\n      start: start,\n      end: getLastNode()\n    });\n  };\n\n  var selectNextNode = function selectNextNode(event, id) {\n    return selectRange(event, {\n      end: getNextNode(id),\n      current: id\n    }, true);\n  };\n\n  var selectPreviousNode = function selectPreviousNode(event, id) {\n    return selectRange(event, {\n      end: getPreviousNode(id),\n      current: id\n    }, true);\n  };\n\n  var selectAllNodes = function selectAllNodes(event) {\n    return selectRange(event, {\n      start: getFirstNode(),\n      end: getLastNode()\n    });\n  };\n  /*\n   * Mapping Helpers\n   */\n\n\n  var addNodeToNodeMap = function addNodeToNodeMap(id, childrenIds) {\n    var currentMap = nodeMap.current[id];\n    nodeMap.current[id] = _extends(_extends({}, currentMap), {}, {\n      children: childrenIds,\n      id: id\n    });\n    childrenIds.forEach(function (childId) {\n      var currentChildMap = nodeMap.current[childId];\n      nodeMap.current[childId] = _extends(_extends({}, currentChildMap), {}, {\n        parent: id,\n        id: childId\n      });\n    });\n  };\n\n  var getNodesToRemove = React.useCallback(function (id) {\n    var map = nodeMap.current[id];\n    var nodes = [];\n\n    if (map) {\n      nodes.push(id);\n\n      if (map.children) {\n        nodes.push.apply(nodes, _toConsumableArray(map.children));\n        map.children.forEach(function (node) {\n          nodes.push.apply(nodes, _toConsumableArray(getNodesToRemove(node)));\n        });\n      }\n    }\n\n    return nodes;\n  }, []);\n  var cleanUpFirstCharMap = React.useCallback(function (nodes) {\n    var newMap = _extends({}, firstCharMap.current);\n\n    nodes.forEach(function (node) {\n      if (newMap[node]) {\n        delete newMap[node];\n      }\n    });\n    firstCharMap.current = newMap;\n  }, []);\n  var removeNodeFromNodeMap = React.useCallback(function (id) {\n    var nodes = getNodesToRemove(id);\n    cleanUpFirstCharMap(nodes);\n\n    var newMap = _extends({}, nodeMap.current);\n\n    nodes.forEach(function (node) {\n      var map = newMap[node];\n\n      if (map) {\n        if (map.parent) {\n          var parentMap = newMap[map.parent];\n\n          if (parentMap && parentMap.children) {\n            var parentChildren = parentMap.children.filter(function (c) {\n              return c !== node;\n            });\n            newMap[map.parent] = _extends(_extends({}, parentMap), {}, {\n              children: parentChildren\n            });\n          }\n        }\n\n        delete newMap[node];\n      }\n    });\n    nodeMap.current = newMap;\n    setFocusedNodeId(function (oldFocusedNodeId) {\n      if (oldFocusedNodeId === id) {\n        return null;\n      }\n\n      return oldFocusedNodeId;\n    });\n  }, [getNodesToRemove, cleanUpFirstCharMap]);\n\n  var mapFirstChar = function mapFirstChar(id, firstChar) {\n    firstCharMap.current[id] = firstChar;\n  };\n\n  var prevChildIds = React.useRef([]);\n\n  var _React$useState3 = React.useState(false),\n      childrenCalculated = _React$useState3[0],\n      setChildrenCalculated = _React$useState3[1];\n\n  React.useEffect(function () {\n    var childIds = [];\n    React.Children.forEach(children, function (child) {\n      if (React.isValidElement(child) && child.props.nodeId) {\n        childIds.push(child.props.nodeId);\n      }\n    });\n\n    if (arrayDiff(prevChildIds.current, childIds)) {\n      nodeMap.current[-1] = {\n        parent: null,\n        children: childIds\n      };\n      childIds.forEach(function (id, index) {\n        if (index === 0) {\n          setTabbable(id);\n        }\n      });\n      visibleNodes.current = nodeMap.current[-1].children;\n      prevChildIds.current = childIds;\n      setChildrenCalculated(true);\n    }\n  }, [children]);\n  React.useEffect(function () {\n    var buildVisible = function buildVisible(nodes) {\n      var list = [];\n\n      for (var i = 0; i < nodes.length; i += 1) {\n        var item = nodes[i];\n        list.push(item);\n        var childs = nodeMap.current[item].children;\n\n        if (isExpanded(item) && childs) {\n          list = list.concat(buildVisible(childs));\n        }\n      }\n\n      return list;\n    };\n\n    if (childrenCalculated) {\n      visibleNodes.current = buildVisible(nodeMap.current[-1].children);\n    }\n  }, [expanded, childrenCalculated, isExpanded, children]);\n\n  var noopSelection = function noopSelection() {\n    return false;\n  };\n\n  return /*#__PURE__*/React.createElement(TreeViewContext.Provider, {\n    value: {\n      icons: {\n        defaultCollapseIcon: defaultCollapseIcon,\n        defaultExpandIcon: defaultExpandIcon,\n        defaultParentIcon: defaultParentIcon,\n        defaultEndIcon: defaultEndIcon\n      },\n      focus: focus,\n      focusFirstNode: focusFirstNode,\n      focusLastNode: focusLastNode,\n      focusNextNode: focusNextNode,\n      focusPreviousNode: focusPreviousNode,\n      focusByFirstCharacter: focusByFirstCharacter,\n      expandAllSiblings: expandAllSiblings,\n      toggleExpansion: toggleExpansion,\n      isExpanded: isExpanded,\n      isFocused: isFocused,\n      isSelected: isSelected,\n      selectNode: disableSelection ? noopSelection : selectNode,\n      selectRange: disableSelection ? noopSelection : selectRange,\n      selectNextNode: disableSelection ? noopSelection : selectNextNode,\n      selectPreviousNode: disableSelection ? noopSelection : selectPreviousNode,\n      rangeSelectToFirst: disableSelection ? noopSelection : rangeSelectToFirst,\n      rangeSelectToLast: disableSelection ? noopSelection : rangeSelectToLast,\n      selectAllNodes: disableSelection ? noopSelection : selectAllNodes,\n      isTabbable: isTabbable,\n      multiSelect: multiSelect,\n      getParent: getParent,\n      mapFirstChar: mapFirstChar,\n      addNodeToNodeMap: addNodeToNodeMap,\n      removeNodeFromNodeMap: removeNodeFromNodeMap\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", _extends({\n    role: \"tree\",\n    \"aria-multiselectable\": multiSelect,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeView.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default icon used to collapse the node.\n   */\n  defaultCollapseIcon: PropTypes.node,\n\n  /**\n   * The default icon displayed next to a end node. This is applied to all\n   * tree nodes and can be overridden by the TreeItem `icon` prop.\n   */\n  defaultEndIcon: PropTypes.node,\n\n  /**\n   * Expanded node ids. (Uncontrolled)\n   */\n  defaultExpanded: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * The default icon used to expand the node.\n   */\n  defaultExpandIcon: PropTypes.node,\n\n  /**\n   * The default icon displayed next to a parent node. This is applied to all\n   * parent nodes and can be overridden by the TreeItem `icon` prop.\n   */\n  defaultParentIcon: PropTypes.node,\n\n  /**\n   * Selected node ids. (Uncontrolled)\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\n   */\n  defaultSelected: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string]),\n\n  /**\n   * If `true` selection is disabled.\n   */\n  disableSelection: PropTypes.bool,\n\n  /**\n   * Expanded node ids. (Controlled)\n   */\n  expanded: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * If true `ctrl` and `shift` will trigger multiselect.\n   */\n  multiSelect: PropTypes.bool,\n\n  /**\n   * Callback fired when tree items are selected/unselected.\n   *\n   * @param {object} event The event source of the callback\n   * @param {(array|string)} value of the selected nodes. When `multiSelect` is true\n   * this is an array of strings; when false (default) a string.\n   */\n  onNodeSelect: PropTypes.func,\n\n  /**\n   * Callback fired when tree items are expanded/collapsed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {array} nodeIds The ids of the expanded nodes.\n   */\n  onNodeToggle: PropTypes.func,\n\n  /**\n   * Selected node ids. (Controlled)\n   * When `multiSelect` is true this takes an array of strings; when false (default) a string.\n   */\n  selected: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTreeView'\n})(TreeView);"]},"metadata":{},"sourceType":"module"}