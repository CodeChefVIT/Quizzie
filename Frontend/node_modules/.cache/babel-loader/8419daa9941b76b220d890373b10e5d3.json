{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(Array.prototype, 'find', {\n  value: function value(predicate) {\n    if (this == null) {\n      throw new TypeError('\"this\" is null or not defined');\n    }\n\n    var o = Object(this);\n    var len = o.length >>> 0;\n\n    if (typeof predicate !== 'function') {\n      throw new TypeError('predicate must be a function');\n    }\n\n    var thisArg = arguments[1];\n    var k = 0;\n\n    while (k < len) {\n      var kValue = o[k];\n\n      if (predicate.call(thisArg, kValue, k, o)) {\n        return kValue;\n      }\n\n      k++;\n    }\n\n    return undefined;\n  }\n});","map":{"version":3,"sources":["/Users/mac/Documents/Projects/Quizzie/Frontend/node_modules/material-table/dist/utils/polyfill/array.find.js"],"names":["Object","defineProperty","Array","prototype","value","predicate","TypeError","o","len","length","thisArg","arguments","k","kValue","call","undefined"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,KAAK,CAACC,SAA5B,EAAuC,MAAvC,EAA+C;AAC7CC,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAeC,SAAf,EAA0B;AAC/B,QAAI,QAAQ,IAAZ,EAAkB;AAChB,YAAM,IAAIC,SAAJ,CAAc,+BAAd,CAAN;AACD;;AAED,QAAIC,CAAC,GAAGP,MAAM,CAAC,IAAD,CAAd;AACA,QAAIQ,GAAG,GAAGD,CAAC,CAACE,MAAF,KAAa,CAAvB;;AAEA,QAAI,OAAOJ,SAAP,KAAqB,UAAzB,EAAqC;AACnC,YAAM,IAAIC,SAAJ,CAAc,8BAAd,CAAN;AACD;;AAED,QAAII,OAAO,GAAGC,SAAS,CAAC,CAAD,CAAvB;AACA,QAAIC,CAAC,GAAG,CAAR;;AAEA,WAAOA,CAAC,GAAGJ,GAAX,EAAgB;AACd,UAAIK,MAAM,GAAGN,CAAC,CAACK,CAAD,CAAd;;AAEA,UAAIP,SAAS,CAACS,IAAV,CAAeJ,OAAf,EAAwBG,MAAxB,EAAgCD,CAAhC,EAAmCL,CAAnC,CAAJ,EAA2C;AACzC,eAAOM,MAAP;AACD;;AAEDD,MAAAA,CAAC;AACF;;AAED,WAAOG,SAAP;AACD;AA3B4C,CAA/C","sourcesContent":["\"use strict\";\n\nObject.defineProperty(Array.prototype, 'find', {\n  value: function value(predicate) {\n    if (this == null) {\n      throw new TypeError('\"this\" is null or not defined');\n    }\n\n    var o = Object(this);\n    var len = o.length >>> 0;\n\n    if (typeof predicate !== 'function') {\n      throw new TypeError('predicate must be a function');\n    }\n\n    var thisArg = arguments[1];\n    var k = 0;\n\n    while (k < len) {\n      var kValue = o[k];\n\n      if (predicate.call(thisArg, kValue, k, o)) {\n        return kValue;\n      }\n\n      k++;\n    }\n\n    return undefined;\n  }\n});"]},"metadata":{},"sourceType":"script"}