{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Projects/Scholastic-Quiz/src/pages/LoginPage.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport './LoginPage.css';\nimport { Container, Typography, Button } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { Link } from \"react-router-dom\";\nimport TextInput from \"../components/TextInput\";\nimport * as EmailValidator from 'email-validator';\nimport InfoContext from '../context/InfoContext';\nimport axios from \"axios\";\nimport Loading from \"./Loading\";\n\nfunction LoginPage() {\n  const [email, changeEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [emailChanged, setEmailChanged] = useState(false);\n  const [password, changePassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [passwordChanged, setPasswordChanged] = useState(false);\n  const [didLogin, setDidLogin] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const {\n    isLoggedIn,\n    setLoggedIn,\n    changeName,\n    setAuthToken,\n    isAdmin,\n    setAdmin\n  } = useContext(InfoContext);\n  const mailErrorText = \"Email cannot be empty\";\n  const passwordErrorText = \"Password cannot be empty\";\n\n  const handleEmailChange = event => {\n    setEmailChanged(true);\n    changeEmail(event.target.value);\n  };\n\n  const handlePasswordChange = event => {\n    setPasswordChanged(true);\n    changePassword(event.target.value);\n  };\n\n  useEffect(() => {\n    if (email.length === 0) setEmailError(mailErrorText);else setEmailError(\"\");\n    if (password.length === 0) setPasswordError(passwordErrorText);else setPasswordError(\"\");\n  }, [email, password]);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setEmailChanged(true);\n    setPasswordChanged(true);\n    let errors = false;\n\n    if (email.length === 0) {\n      setEmailError(mailErrorText);\n      errors = true;\n    } else if (!EmailValidator.validate(email)) {\n      setEmailError(\"Invalid email address!\");\n      errors = true;\n    }\n\n    if (password.length === 0) {\n      setPasswordError(passwordErrorText);\n      errors = true;\n    } else if (password.length < 8) {\n      setPasswordError(\"Minimum length of password must be 8.\");\n      errors = true;\n    }\n\n    if (!errors && emailError.length === 0 && passwordError.length === 0) {\n      setLoading(true);\n      let url = `https://scholastic-quiz-app.herokuapp.com/api/user/login?\n\t\t\t\t\t\temail=${email}&password=${password}`;\n      let response = null;\n\n      try {\n        await axios.post(url).then(res => {\n          response = res;\n        });\n\n        if (response.status === 200) {\n          console.log(response);\n          changeName(response.data.name);\n          setLoggedIn(true);\n          setDidLogin(true);\n          setAuthToken(response.data.authToken);\n\n          if (response.data.isAdmin == true) {\n            setAdmin(true);\n            console.log(response.data.isAdmin);\n          }\n\n          localStorage.setItem('userLoggedIn', true);\n          localStorage.setItem('name', response.data.name);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    setLoading(false);\n  };\n\n  return isLoading ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 14\n    }\n  }) : /*#__PURE__*/React.createElement(Container, {\n    className: \"login-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    color: \"primary\",\n    className: \"login-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, \"Login Now!\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 92\n    }\n  }), didLogin === true ? /*#__PURE__*/React.createElement(Alert, {\n    severity: \"success\",\n    color: \"warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, \"Succesfully Logged In!\") : null, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    error: emailChanged ? emailError.length === 0 ? false : true : false,\n    helperText: emailChanged ? emailError.length === 0 ? null : emailError : null,\n    id: \"email\",\n    label: \"Email\",\n    type: \"email\",\n    className: \"form-input\",\n    variant: \"outlined\",\n    value: email,\n    onChange: handleEmailChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(TextInput, {\n    error: passwordChanged ? passwordError.length === 0 ? false : true : false,\n    helperText: passwordChanged ? passwordError.length === 0 ? null : passwordError : null,\n    id: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    className: \"form-input\",\n    variant: \"outlined\",\n    value: password,\n    onChange: handlePasswordChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"login-btn\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/register\",\n    className: \"link register-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, \"Don't have an account? Join the rebellion now!\")));\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/mac/Documents/Projects/Scholastic-Quiz/src/pages/LoginPage.js"],"names":["React","useState","useEffect","useContext","Container","Typography","Button","Alert","Link","TextInput","EmailValidator","InfoContext","axios","Loading","LoginPage","email","changeEmail","emailError","setEmailError","emailChanged","setEmailChanged","password","changePassword","passwordError","setPasswordError","passwordChanged","setPasswordChanged","didLogin","setDidLogin","isLoading","setLoading","isLoggedIn","setLoggedIn","changeName","setAuthToken","isAdmin","setAdmin","mailErrorText","passwordErrorText","handleEmailChange","event","target","value","handlePasswordChange","length","handleSubmit","preventDefault","errors","validate","url","response","post","then","res","status","console","log","data","name","authToken","localStorage","setItem","error"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport './LoginPage.css';\nimport { Container, Typography, Button } from \"@material-ui/core\";\nimport {Alert} from \"@material-ui/lab\";\nimport {Link} from \"react-router-dom\";\nimport TextInput from \"../components/TextInput\";\nimport * as EmailValidator from 'email-validator';\nimport InfoContext from '../context/InfoContext';\nimport axios from \"axios\";\nimport Loading from \"./Loading\";\n\n\nfunction LoginPage() {\n\tconst [email, changeEmail] = useState(\"\");\n\tconst [emailError, setEmailError] = useState(\"\");\n\tconst [emailChanged, setEmailChanged] = useState(false);\n\tconst [password, changePassword] = useState(\"\");\n\tconst [passwordError, setPasswordError] = useState(\"\");\n\tconst [passwordChanged, setPasswordChanged] = useState(false);\n\tconst [didLogin, setDidLogin] = useState(false);\n\n\tconst [isLoading, setLoading] = useState(false);\n\n\tconst {isLoggedIn, setLoggedIn, changeName, setAuthToken, isAdmin, setAdmin} = useContext(InfoContext);\n\t\n\n\tconst mailErrorText = \"Email cannot be empty\";\n\tconst passwordErrorText = \"Password cannot be empty\";\n\t\n\tconst handleEmailChange = (event) => {\n\t\tsetEmailChanged(true);\n\t\tchangeEmail(event.target.value);\n\t}\n\n\tconst handlePasswordChange = (event) => {\n\t\tsetPasswordChanged(true);\n\t\tchangePassword(event.target.value);\n\t}\n\n\tuseEffect(() => {\n\t\tif(email.length === 0) setEmailError(mailErrorText);\n\t\telse setEmailError(\"\");\n\n\t\tif(password.length === 0) setPasswordError(passwordErrorText);\n\t\telse setPasswordError(\"\");\n\t}, [email, password]);\n\n\tconst handleSubmit = async (event) => {\n\t\tevent.preventDefault();\n\n\t\tsetEmailChanged(true);\n\t\tsetPasswordChanged(true);\n\n\t\tlet errors = false;\n\n\t\tif(email.length === 0) {\n\t\t\tsetEmailError(mailErrorText);\n\t\t\terrors = true;\n\t\t} else if(!EmailValidator.validate(email)) {\n\t\t\tsetEmailError(\"Invalid email address!\");\n\t\t\terrors = true;\n\t\t}\n\t\tif(password.length === 0) {\n\t\t\tsetPasswordError(passwordErrorText);\n\t\t\terrors = true;\n\t\t} else if(password.length < 8) {\n\t\t\tsetPasswordError(\"Minimum length of password must be 8.\");\n\t\t\terrors = true;\n\t\t}\n\n\t\tif(!errors && emailError.length === 0 && passwordError.length === 0) {\n\t\t\tsetLoading(true);\n\t\t\tlet url = `https://scholastic-quiz-app.herokuapp.com/api/user/login?\n\t\t\t\t\t\temail=${email}&password=${password}`;\n\t\t\t\n\t\t\tlet response = null;\n\t\t\ttry {\n\t\t\t\tawait axios.post(url).then(res => {\n\t\t\t\t\tresponse = res;\n\t\t\t\t});\n\n\t\t\t\tif(response.status === 200) {\n\t\t\t\t\tconsole.log(response);\n\t\t\t\t\tchangeName(response.data.name);\n\t\t\t\t\tsetLoggedIn(true);\n\t\t\t\t\tsetDidLogin(true);\n\t\t\t\t\tsetAuthToken(response.data.authToken);\n\n\t\t\t\t\tif(response.data.isAdmin == true) {\n\t\t\t\t\t\tsetAdmin(true);\n\t\t\t\t\t\tconsole.log(response.data.isAdmin);\n\t\t\t\t\t} \n\t\t\t\t\t\t\n\n\t\t\t\t\tlocalStorage.setItem('userLoggedIn', true);\n\t\t\t\t\tlocalStorage.setItem('name', response.data.name);\n\n\t\t\t\t}\n\t\t\t} catch(error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t}\n\t\tsetLoading(false);\n\t}\n\n\treturn (\n\t\tisLoading? <Loading />\n\t\t:\n\t\t<Container className=\"login-page\">\n\t\t\t<div className=\"login-form\">\n\t\t\t\t<Typography variant=\"h3\" color=\"primary\" className=\"login-head\">Login Now!</Typography><br />\n\t\t\t\t{didLogin === true? <Alert severity=\"success\" color=\"warning\">Succesfully Logged In!</Alert>: null}\n\t\t\t\t<form className=\"form\">\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\terror={emailChanged? (emailError.length === 0? false: true): false}\n\t\t\t\t\t\thelperText={emailChanged? (emailError.length === 0? null: emailError): null}\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tclassName=\"form-input\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={handleEmailChange}></TextInput>\n\t\t\t\t\t<br />\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\terror={passwordChanged? (passwordError.length === 0? false: true): false}\n\t\t\t\t\t\thelperText={passwordChanged? (passwordError.length === 0? null: passwordError): null}\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\tclassName=\"form-input\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={handlePasswordChange}></TextInput>\n\t\t\t\t</form>\n\t\t\t\t<Button className=\"login-btn\" onClick={handleSubmit}>Login</Button>\n\t\t\t\t<Link to=\"/register\" className=\"link register-link\">Don't have an account? Join the rebellion now!</Link>\n\t\t\t</div>\n\t\t</Container>\n\t)\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}