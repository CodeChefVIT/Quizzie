{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Projects/Scholastic-Quiz/src/pages/LoginPage.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport './LoginPage.css';\nimport { Container, Typography, Button } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport TextInput from \"../components/TextInput\";\nimport * as EmailValidator from 'email-validator';\nimport InfoContext from '../context/InfoContext';\nimport axios from \"axios\";\nimport Loading from \"./Loading\";\n\nfunction LoginPage() {\n  const [email, changeEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [emailChanged, setEmailChanged] = useState(false);\n  const [password, changePassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [passwordChanged, setPasswordChanged] = useState(false);\n  const [didLogin, setDidLogin] = useState(null);\n  const [errorText, setErrorText] = useState(\"Error Logging In! Try again....\");\n  const [redirect, setRedirect] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const {\n    setLoggedIn,\n    changeName,\n    setAuthToken,\n    setAdmin\n  } = useContext(InfoContext);\n  const mailErrorText = \"Email cannot be empty\";\n  const passwordErrorText = \"Password cannot be empty\";\n\n  const handleEmailChange = event => {\n    setEmailChanged(true);\n    changeEmail(event.target.value);\n  };\n\n  const handlePasswordChange = event => {\n    setPasswordChanged(true);\n    changePassword(event.target.value);\n  };\n\n  const keyPress = event => {\n    if (event.key === \"Enter\") {\n      handleSubmit();\n    }\n  };\n\n  useEffect(() => {\n    if (email.length === 0) setEmailError(mailErrorText);else setEmailError(\"\");\n    if (password.length === 0) setPasswordError(passwordErrorText);else setPasswordError(\"\");\n  }, [email, password]);\n\n  const handleSubmit = async event => {\n    // event.preventDefault();\n    setEmailChanged(true);\n    setPasswordChanged(true);\n    let errors = false;\n\n    if (email.length === 0) {\n      setEmailError(mailErrorText);\n      errors = true;\n    } else if (!EmailValidator.validate(email)) {\n      setEmailError(\"Invalid email address!\");\n      errors = true;\n    }\n\n    if (password.length === 0) {\n      setPasswordError(passwordErrorText);\n      errors = true;\n    } else if (password.length < 8) {\n      setPasswordError(\"Minimum length of password must be 8.\");\n      errors = true;\n    }\n\n    if (!errors && emailError.length === 0 && passwordError.length === 0) {\n      setLoading(true);\n      let url = `https://scholastic-quiz-app.herokuapp.com/api/user/login`;\n      let data = {\n        \"email\": email,\n        \"password\": password\n      };\n      let response = null;\n\n      try {\n        await axios.post(url, data).then(res => {\n          response = res;\n        });\n\n        if (response.status === 200) {\n          changeName(response.data.name);\n          setLoggedIn(true);\n          setAuthToken(response.data.authToken);\n\n          if (response.data.isAdmin === true) {\n            setAdmin(true);\n          }\n\n          localStorage.setItem('userLoggedIn', true);\n          localStorage.setItem('name', response.data.user.name);\n          localStorage.setItem(\"authToken\", response.data.authToken);\n          setRedirect(true);\n        }\n      } catch (error) {\n        console.log(error);\n\n        if (error.response.status === 404) {\n          setErrorText(\"Account doesn't exist.. Join the rebellion now!\");\n          changeEmail(\"\");\n          changePassword(\"\");\n        } else if (error.response.status === 400) {\n          setErrorText(\"Incorrect Password\");\n          changePassword(\"\");\n        }\n\n        setDidLogin(false);\n      }\n    }\n\n    setLoading(false);\n  };\n\n  if (redirect === true) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 10\n      }\n    });\n  }\n\n  return isLoading ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 14\n    }\n  }) : /*#__PURE__*/React.createElement(Container, {\n    className: \"login-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    color: \"primary\",\n    className: \"login-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, \"Login Now!\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 92\n    }\n  }), didLogin === false ? /*#__PURE__*/React.createElement(Alert, {\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 26\n    }\n  }, errorText) : null, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    error: emailChanged ? emailError.length === 0 ? false : true : false,\n    helperText: emailChanged ? emailError.length === 0 ? null : emailError : null,\n    id: \"email\",\n    label: \"Email\",\n    type: \"email\",\n    className: \"form-input\",\n    variant: \"outlined\",\n    value: email,\n    onChange: handleEmailChange,\n    onKeyPress: keyPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(TextInput, {\n    error: passwordChanged ? passwordError.length === 0 ? false : true : false,\n    helperText: passwordChanged ? passwordError.length === 0 ? null : passwordError : null,\n    id: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    className: \"form-input\",\n    variant: \"outlined\",\n    value: password,\n    onChange: handlePasswordChange,\n    onKeyPress: keyPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"forgot-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/forgotPassword\",\n    className: \"link forgot-pass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 6\n    }\n  }, \"Forgot your password?\")), /*#__PURE__*/React.createElement(Button, {\n    className: \"login-btn\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/register\",\n    className: \"link register-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }\n  }, \"Don't have an account? Join the rebellion now!\")));\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/mac/Documents/Projects/Scholastic-Quiz/src/pages/LoginPage.js"],"names":["React","useState","useEffect","useContext","Container","Typography","Button","Alert","Link","Redirect","TextInput","EmailValidator","InfoContext","axios","Loading","LoginPage","email","changeEmail","emailError","setEmailError","emailChanged","setEmailChanged","password","changePassword","passwordError","setPasswordError","passwordChanged","setPasswordChanged","didLogin","setDidLogin","errorText","setErrorText","redirect","setRedirect","isLoading","setLoading","setLoggedIn","changeName","setAuthToken","setAdmin","mailErrorText","passwordErrorText","handleEmailChange","event","target","value","handlePasswordChange","keyPress","key","handleSubmit","length","errors","validate","url","data","response","post","then","res","status","name","authToken","isAdmin","localStorage","setItem","user","error","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport './LoginPage.css';\nimport { Container, Typography, Button } from \"@material-ui/core\";\nimport {Alert} from \"@material-ui/lab\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport TextInput from \"../components/TextInput\";\nimport * as EmailValidator from 'email-validator';\nimport InfoContext from '../context/InfoContext';\nimport axios from \"axios\";\nimport Loading from \"./Loading\";\n\n\nfunction LoginPage() {\n\tconst [email, changeEmail] = useState(\"\");\n\tconst [emailError, setEmailError] = useState(\"\");\n\tconst [emailChanged, setEmailChanged] = useState(false);\n\tconst [password, changePassword] = useState(\"\");\n\tconst [passwordError, setPasswordError] = useState(\"\");\n\tconst [passwordChanged, setPasswordChanged] = useState(false);\n\tconst [didLogin, setDidLogin] = useState(null);\n\tconst [errorText, setErrorText] = useState(\"Error Logging In! Try again....\");\n\tconst [redirect, setRedirect] = useState(false);\n\n\tconst [isLoading, setLoading] = useState(false);\n\n\tconst {setLoggedIn, changeName, setAuthToken, setAdmin} = useContext(InfoContext);\n\n\tconst mailErrorText = \"Email cannot be empty\";\n\tconst passwordErrorText = \"Password cannot be empty\";\n\t\n\tconst handleEmailChange = (event) => {\n\t\tsetEmailChanged(true);\n\t\tchangeEmail(event.target.value);\n\t}\n\n\tconst handlePasswordChange = (event) => {\n\t\tsetPasswordChanged(true);\n\t\tchangePassword(event.target.value);\n\t}\n\n\tconst keyPress = (event) => {\n\t\tif (event.key === \"Enter\") {\n\t\t\thandleSubmit();\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tif(email.length === 0) setEmailError(mailErrorText);\n\t\telse setEmailError(\"\");\n\n\t\tif(password.length === 0) setPasswordError(passwordErrorText);\n\t\telse setPasswordError(\"\");\n\t}, [email, password]);\n\n\tconst handleSubmit = async (event) => {\n\t\t// event.preventDefault();\n\n\t\tsetEmailChanged(true);\n\t\tsetPasswordChanged(true);\n\n\t\tlet errors = false;\n\n\t\tif(email.length === 0) {\n\t\t\tsetEmailError(mailErrorText);\n\t\t\terrors = true;\n\t\t} else if(!EmailValidator.validate(email)) {\n\t\t\tsetEmailError(\"Invalid email address!\");\n\t\t\terrors = true;\n\t\t}\n\t\tif(password.length === 0) {\n\t\t\tsetPasswordError(passwordErrorText);\n\t\t\terrors = true;\n\t\t} else if(password.length < 8) {\n\t\t\tsetPasswordError(\"Minimum length of password must be 8.\");\n\t\t\terrors = true;\n\t\t}\n\n\t\tif(!errors && emailError.length === 0 && passwordError.length === 0) {\n\t\t\tsetLoading(true);\n\t\t\tlet url = `https://scholastic-quiz-app.herokuapp.com/api/user/login`;\n\n\t\t\tlet data = {\n\t\t\t\t\"email\": email,\n\t\t\t\t\"password\": password\n\t\t\t}\n\t\t\t\n\t\t\tlet response = null;\n\t\t\ttry {\n\t\t\t\tawait axios.post(url, data).then(res => {\n\t\t\t\t\tresponse = res;\n\t\t\t\t});\n\n\t\t\t\tif(response.status === 200) {\n\t\t\t\t\tchangeName(response.data.name);\n\t\t\t\t\tsetLoggedIn(true);\n\t\t\t\t\tsetAuthToken(response.data.authToken);\n\n\t\t\t\t\tif(response.data.isAdmin === true) {\n\t\t\t\t\t\tsetAdmin(true);\n\t\t\t\t\t} \n\n\t\t\t\t\tlocalStorage.setItem('userLoggedIn', true);\n\t\t\t\t\tlocalStorage.setItem('name', response.data.user.name);\n\t\t\t\t\tlocalStorage.setItem(\"authToken\", response.data.authToken);\n\n\t\t\t\t\tsetRedirect(true);\n\t\t\t\t} \n\t\t\t} catch(error) {\n\t\t\t\tconsole.log(error);\n\t\t\t\tif(error.response.status === 404){\n\t\t\t\t\tsetErrorText(\"Account doesn't exist.. Join the rebellion now!\")\n\t\t\t\t\tchangeEmail(\"\")\n\t\t\t\t\tchangePassword(\"\")\n\t\t\t\t}\n\t\t\t\telse if(error.response.status === 400){\n\t\t\t\t\tsetErrorText(\"Incorrect Password\")\n\t\t\t\t\tchangePassword(\"\")\n\t\t\t\t}\n\t\t\t\tsetDidLogin(false);\n\t\t\t}\n\t\t}\n\t\tsetLoading(false);\n\t}\n\n\tif(redirect === true){\n\t\treturn <Redirect to='/' />\n\t}\n\treturn (\n\t\tisLoading? <Loading />\n\t\t:\n\t\t<Container className=\"login-page\">\n\t\t\t<div className=\"login-form\">\n\t\t\t\t<Typography variant=\"h3\" color=\"primary\" className=\"login-head\">Login Now!</Typography><br />\n\t\t\t\t{didLogin === false? <Alert severity=\"error\">{errorText}</Alert>: null}\n\t\t\t\t<form className=\"form\">\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\terror={emailChanged? (emailError.length === 0? false: true): false}\n\t\t\t\t\t\thelperText={emailChanged? (emailError.length === 0? null: emailError): null}\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tclassName=\"form-input\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={handleEmailChange}\n\t\t\t\t\t\tonKeyPress={keyPress}></TextInput>\n\t\t\t\t\t<br />\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\terror={passwordChanged? (passwordError.length === 0? false: true): false}\n\t\t\t\t\t\thelperText={passwordChanged? (passwordError.length === 0? null: passwordError): null}\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\tclassName=\"form-input\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={handlePasswordChange}\n\t\t\t\t\t\tonKeyPress={keyPress}></TextInput>\n\t\t\t\t</form>\n\t\t\t\t<div className=\"forgot-section\">\n\t\t\t\t\t<Link to=\"/forgotPassword\" className=\"link forgot-pass\">Forgot your password?</Link>\n\t\t\t\t</div>\n\t\t\t\t<Button className=\"login-btn\" onClick={handleSubmit}>Login</Button>\n\t\t\t\t<Link to=\"/register\" className=\"link register-link\">Don't have an account? Join the rebellion now!</Link>\n\t\t\t</div>\n\t\t</Container>\n\t)\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}