{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Projects/Scholastic-Quiz/src/pages/ForgotPassword.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Button, Typography } from \"@material-ui/core\";\nimport TextInput from '../components/TextInput';\nimport EmailValidator from \"email-validator\";\nimport './ForgotPassword.css';\nimport axios from \"axios\";\n\nfunction ForgotPassword() {\n  const [email, changeEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [emailChanged, setEmailChanged] = useState(false);\n  const [tokenSent, setTokenSent] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handleEmailChange = event => {\n    setEmailChanged(true);\n    changeEmail(event.target.value);\n  };\n\n  const mailErrorText = \"Email cannot be empty!\";\n\n  const handleReset = async event => {\n    event.preventDefault();\n    setEmailChanged(true);\n    let errors = false;\n\n    if (email.length === 0) {\n      setEmailError(mailErrorText);\n      errors = true;\n    } else if (!EmailValidator.validate(email)) {\n      setEmailError(\"Invalid email address!\");\n      errors = true;\n    }\n\n    if (!errors && emailError.length === 0) {\n      setLoading(true);\n      let url = `https://scholastic-quiz-app.herokuapp.com/forgot?email=${email}`;\n      let response = null;\n\n      try {\n        await axios.post(url).then(res => response = res);\n        console.log(response);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (email.length === 0) setEmailError(mailErrorText);else setEmailError(\"\");\n  }, [email]);\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"login-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    color: \"primary\",\n    className: \"login-head forgot-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, \"Forgot Password\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 109\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    error: emailChanged ? emailError.length === 0 ? false : true : false,\n    helperText: emailChanged ? emailError.length === 0 ? null : emailError : null,\n    id: \"email\",\n    label: \"Email\",\n    type: \"email\",\n    className: \"form-input\",\n    variant: \"outlined\",\n    value: email,\n    onChange: handleEmailChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"login-btn\",\n    onClick: handleReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, \"Send mail\")));\n}\n\nexport default ForgotPassword;","map":{"version":3,"sources":["/Users/mac/Documents/Projects/Scholastic-Quiz/src/pages/ForgotPassword.js"],"names":["React","useState","useEffect","Container","Button","Typography","TextInput","EmailValidator","axios","ForgotPassword","email","changeEmail","emailError","setEmailError","emailChanged","setEmailChanged","tokenSent","setTokenSent","loading","setLoading","handleEmailChange","event","target","value","mailErrorText","handleReset","preventDefault","errors","length","validate","url","response","post","then","res","console","log","error"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { Container, Button, Typography } from \"@material-ui/core\";\nimport TextInput from '../components/TextInput';\nimport EmailValidator from \"email-validator\";\nimport './ForgotPassword.css';\nimport axios from \"axios\";\n\nfunction ForgotPassword() {\n\tconst [email, changeEmail] = useState(\"\");\n\tconst [emailError, setEmailError] = useState(\"\");\n\tconst [emailChanged, setEmailChanged] = useState(false);\n\n\tconst [tokenSent, setTokenSent] = useState(false);\n\tconst [loading, setLoading] = useState(false);\n\n\tconst handleEmailChange = (event) => {\n\t\tsetEmailChanged(true);\n\t\tchangeEmail(event.target.value);\n\t}\n\n\tconst mailErrorText = \"Email cannot be empty!\";\n\n\tconst handleReset = async (event) => {\n\t\tevent.preventDefault();\n\n\t\tsetEmailChanged(true);\n\n\t\tlet errors = false;\n\n\t\tif(email.length === 0) {\n\t\t\tsetEmailError(mailErrorText);\n\t\t\terrors = true;\n\t\t} else if(!EmailValidator.validate(email)) {\n\t\t\tsetEmailError(\"Invalid email address!\");\n\t\t\terrors = true;\n\t\t}\n\n\t\tif(!errors && emailError.length === 0) {\n\t\t\tsetLoading(true);\n\t\t\tlet url = `https://scholastic-quiz-app.herokuapp.com/forgot?email=${email}`\n\n\t\t\tlet response = null;\n\n\t\t\ttry {\n\t\t\t\tawait axios.post(url).then(res => response = res);\n\t\t\t\tconsole.log(response);\n\t\t\t} catch(error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t}\n\t\tsetLoading(false);\n\t}\n\n\tuseEffect(() => {\n\t\tif(email.length === 0) setEmailError(mailErrorText);\n\t\telse setEmailError(\"\");\n\n\t}, [email]);\n\n\treturn (\n\t\t<Container className=\"login-page\">\n\t\t\t<div className=\"login-form\">\n\t\t\t\t<Typography variant=\"h3\" color=\"primary\" className=\"login-head forgot-head\">Forgot Password</Typography><br />\n\t\t\t\t<form className=\"form\">\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\terror={emailChanged? (emailError.length === 0? false: true): false}\n\t\t\t\t\t\thelperText={emailChanged? (emailError.length === 0? null: emailError): null}\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tclassName=\"form-input\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={handleEmailChange}></TextInput>\n\t\t\t\t</form>\n\t\t\t\t<Button className=\"login-btn\" onClick={handleReset}>Send mail</Button>\n\t\t\t</div>\n\t\t</Container>\n\t)\n}\n\nexport default ForgotPassword;"]},"metadata":{},"sourceType":"module"}