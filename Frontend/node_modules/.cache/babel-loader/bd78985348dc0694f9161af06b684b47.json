{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // @inheritedComponent Tooltip\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { emphasize, withStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the Fab component. */\n    fab: {\n      margin: 8,\n      color: theme.palette.text.secondary,\n      backgroundColor: theme.palette.background.paper,\n      '&:hover': {\n        backgroundColor: emphasize(theme.palette.background.paper, 0.15)\n      },\n      transition: \"\".concat(theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shorter\n      }), \", opacity 0.8s\"),\n      opacity: 1\n    },\n\n    /* Styles applied to the Fab component if `open={false}`. */\n    fabClosed: {\n      opacity: 0,\n      transform: 'scale(0)'\n    },\n\n    /* Styles applied to the root element if `tooltipOpen={true}`. */\n    staticTooltip: {\n      position: 'relative',\n      display: 'flex',\n      '& $staticTooltipLabel': {\n        transition: theme.transitions.create(['transform', 'opacity'], {\n          duration: theme.transitions.duration.shorter\n        }),\n        opacity: 1\n      }\n    },\n\n    /* Styles applied to the root element if `tooltipOpen={true}` and `open={false}`. */\n    staticTooltipClosed: {\n      '& $staticTooltipLabel': {\n        opacity: 0,\n        transform: 'scale(0.5)'\n      }\n    },\n\n    /* Styles applied to the static tooltip label if `tooltipOpen={true}`. */\n    staticTooltipLabel: _extends(_extends({\n      position: 'absolute'\n    }, theme.typography.body1), {}, {\n      backgroundColor: theme.palette.background.paper,\n      borderRadius: theme.shape.borderRadius,\n      boxShadow: theme.shadows[1],\n      color: theme.palette.text.secondary,\n      padding: '4px 16px'\n    }),\n\n    /* Styles applied to the root if `tooltipOpen={true}` and `tooltipPlacement=\"left\"`` */\n    tooltipPlacementLeft: {\n      alignItems: 'center',\n      '& $staticTooltipLabel': {\n        transformOrigin: '100% 50%',\n        right: '100%',\n        marginRight: 8\n      }\n    },\n\n    /* Styles applied to the root if `tooltipOpen={true}` and `tooltipPlacement=\"right\"`` */\n    tooltipPlacementRight: {\n      alignItems: 'center',\n      '& $staticTooltipLabel': {\n        transformOrigin: '0% 50%',\n        left: '100%',\n        marginLeft: 8\n      }\n    }\n  };\n};\nvar SpeedDialAction = React.forwardRef(function SpeedDialAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$delay = props.delay,\n      delay = _props$delay === void 0 ? 0 : _props$delay,\n      _props$FabProps = props.FabProps,\n      FabProps = _props$FabProps === void 0 ? {} : _props$FabProps,\n      icon = props.icon,\n      id = props.id,\n      open = props.open,\n      TooltipClasses = props.TooltipClasses,\n      _props$tooltipOpen = props.tooltipOpen,\n      tooltipOpenProp = _props$tooltipOpen === void 0 ? false : _props$tooltipOpen,\n      _props$tooltipPlaceme = props.tooltipPlacement,\n      tooltipPlacement = _props$tooltipPlaceme === void 0 ? 'left' : _props$tooltipPlaceme,\n      tooltipTitle = props.tooltipTitle,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"delay\", \"FabProps\", \"icon\", \"id\", \"open\", \"TooltipClasses\", \"tooltipOpen\", \"tooltipPlacement\", \"tooltipTitle\"]);\n\n  var _React$useState = React.useState(tooltipOpenProp),\n      tooltipOpen = _React$useState[0],\n      setTooltipOpen = _React$useState[1];\n\n  var handleTooltipClose = function handleTooltipClose() {\n    setTooltipOpen(false);\n  };\n\n  var handleTooltipOpen = function handleTooltipOpen() {\n    setTooltipOpen(true);\n  };\n\n  var transitionStyle = {\n    transitionDelay: \"\".concat(delay, \"ms\")\n  };\n  var fab = /*#__PURE__*/React.createElement(Fab, _extends({\n    size: \"small\",\n    className: clsx(classes.fab, className, !open && classes.fabClosed),\n    tabIndex: -1,\n    role: \"menuitem\",\n    \"aria-describedby\": \"\".concat(id, \"-label\")\n  }, FabProps, {\n    style: _extends(_extends({}, transitionStyle), FabProps.style)\n  }), icon);\n\n  if (tooltipOpenProp) {\n    return /*#__PURE__*/React.createElement(\"span\", _extends({\n      id: id,\n      ref: ref,\n      className: clsx(classes.staticTooltip, classes[\"tooltipPlacement\".concat(capitalize(tooltipPlacement))], !open && classes.staticTooltipClosed)\n    }, other), /*#__PURE__*/React.createElement(\"span\", {\n      style: transitionStyle,\n      id: \"\".concat(id, \"-label\"),\n      className: classes.staticTooltipLabel\n    }, tooltipTitle), fab);\n  }\n\n  return /*#__PURE__*/React.createElement(Tooltip, _extends({\n    id: id,\n    ref: ref,\n    title: tooltipTitle,\n    placement: tooltipPlacement,\n    onClose: handleTooltipClose,\n    onOpen: handleTooltipOpen,\n    open: open && tooltipOpen,\n    classes: TooltipClasses\n  }, other), fab);\n});\nprocess.env.NODE_ENV !== \"production\" ? SpeedDialAction.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Adds a transition delay, to allow a series of SpeedDialActions to be animated.\n   */\n  delay: PropTypes.number,\n\n  /**\n   * Props applied to the [`Fab`](/api/fab/) component.\n   */\n  FabProps: PropTypes.object,\n\n  /**\n   * The Icon to display in the SpeedDial Fab.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the tooltip is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * `classes` prop applied to the [`Tooltip`](/api/tooltip/) element.\n   */\n  TooltipClasses: PropTypes.object,\n\n  /**\n   * Make the tooltip always visible when the SpeedDial is open.\n   */\n  tooltipOpen: PropTypes.bool,\n\n  /**\n   * Placement of the tooltip.\n   */\n  tooltipPlacement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * Label to display in the tooltip.\n   */\n  tooltipTitle: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSpeedDialAction'\n})(SpeedDialAction);","map":{"version":3,"sources":["/Users/mac/Documents/Projects/Scholastic-Quiz/node_modules/@material-ui/lab/esm/SpeedDialAction/SpeedDialAction.js"],"names":["_objectWithoutProperties","_extends","React","PropTypes","clsx","emphasize","withStyles","Fab","Tooltip","capitalize","styles","theme","fab","margin","color","palette","text","secondary","backgroundColor","background","paper","transition","concat","transitions","create","duration","shorter","opacity","fabClosed","transform","staticTooltip","position","display","staticTooltipClosed","staticTooltipLabel","typography","body1","borderRadius","shape","boxShadow","shadows","padding","tooltipPlacementLeft","alignItems","transformOrigin","right","marginRight","tooltipPlacementRight","left","marginLeft","SpeedDialAction","forwardRef","props","ref","classes","className","_props$delay","delay","_props$FabProps","FabProps","icon","id","open","TooltipClasses","_props$tooltipOpen","tooltipOpen","tooltipOpenProp","_props$tooltipPlaceme","tooltipPlacement","tooltipTitle","other","_React$useState","useState","setTooltipOpen","handleTooltipClose","handleTooltipOpen","transitionStyle","transitionDelay","createElement","size","tabIndex","role","style","title","placement","onClose","onOpen","process","env","NODE_ENV","propTypes","object","string","number","node","bool","oneOf","name"],"mappings":"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","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// @inheritedComponent Tooltip\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { emphasize, withStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the Fab component. */\n    fab: {\n      margin: 8,\n      color: theme.palette.text.secondary,\n      backgroundColor: theme.palette.background.paper,\n      '&:hover': {\n        backgroundColor: emphasize(theme.palette.background.paper, 0.15)\n      },\n      transition: \"\".concat(theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shorter\n      }), \", opacity 0.8s\"),\n      opacity: 1\n    },\n\n    /* Styles applied to the Fab component if `open={false}`. */\n    fabClosed: {\n      opacity: 0,\n      transform: 'scale(0)'\n    },\n\n    /* Styles applied to the root element if `tooltipOpen={true}`. */\n    staticTooltip: {\n      position: 'relative',\n      display: 'flex',\n      '& $staticTooltipLabel': {\n        transition: theme.transitions.create(['transform', 'opacity'], {\n          duration: theme.transitions.duration.shorter\n        }),\n        opacity: 1\n      }\n    },\n\n    /* Styles applied to the root element if `tooltipOpen={true}` and `open={false}`. */\n    staticTooltipClosed: {\n      '& $staticTooltipLabel': {\n        opacity: 0,\n        transform: 'scale(0.5)'\n      }\n    },\n\n    /* Styles applied to the static tooltip label if `tooltipOpen={true}`. */\n    staticTooltipLabel: _extends(_extends({\n      position: 'absolute'\n    }, theme.typography.body1), {}, {\n      backgroundColor: theme.palette.background.paper,\n      borderRadius: theme.shape.borderRadius,\n      boxShadow: theme.shadows[1],\n      color: theme.palette.text.secondary,\n      padding: '4px 16px'\n    }),\n\n    /* Styles applied to the root if `tooltipOpen={true}` and `tooltipPlacement=\"left\"`` */\n    tooltipPlacementLeft: {\n      alignItems: 'center',\n      '& $staticTooltipLabel': {\n        transformOrigin: '100% 50%',\n        right: '100%',\n        marginRight: 8\n      }\n    },\n\n    /* Styles applied to the root if `tooltipOpen={true}` and `tooltipPlacement=\"right\"`` */\n    tooltipPlacementRight: {\n      alignItems: 'center',\n      '& $staticTooltipLabel': {\n        transformOrigin: '0% 50%',\n        left: '100%',\n        marginLeft: 8\n      }\n    }\n  };\n};\nvar SpeedDialAction = React.forwardRef(function SpeedDialAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$delay = props.delay,\n      delay = _props$delay === void 0 ? 0 : _props$delay,\n      _props$FabProps = props.FabProps,\n      FabProps = _props$FabProps === void 0 ? {} : _props$FabProps,\n      icon = props.icon,\n      id = props.id,\n      open = props.open,\n      TooltipClasses = props.TooltipClasses,\n      _props$tooltipOpen = props.tooltipOpen,\n      tooltipOpenProp = _props$tooltipOpen === void 0 ? false : _props$tooltipOpen,\n      _props$tooltipPlaceme = props.tooltipPlacement,\n      tooltipPlacement = _props$tooltipPlaceme === void 0 ? 'left' : _props$tooltipPlaceme,\n      tooltipTitle = props.tooltipTitle,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"delay\", \"FabProps\", \"icon\", \"id\", \"open\", \"TooltipClasses\", \"tooltipOpen\", \"tooltipPlacement\", \"tooltipTitle\"]);\n\n  var _React$useState = React.useState(tooltipOpenProp),\n      tooltipOpen = _React$useState[0],\n      setTooltipOpen = _React$useState[1];\n\n  var handleTooltipClose = function handleTooltipClose() {\n    setTooltipOpen(false);\n  };\n\n  var handleTooltipOpen = function handleTooltipOpen() {\n    setTooltipOpen(true);\n  };\n\n  var transitionStyle = {\n    transitionDelay: \"\".concat(delay, \"ms\")\n  };\n  var fab = /*#__PURE__*/React.createElement(Fab, _extends({\n    size: \"small\",\n    className: clsx(classes.fab, className, !open && classes.fabClosed),\n    tabIndex: -1,\n    role: \"menuitem\",\n    \"aria-describedby\": \"\".concat(id, \"-label\")\n  }, FabProps, {\n    style: _extends(_extends({}, transitionStyle), FabProps.style)\n  }), icon);\n\n  if (tooltipOpenProp) {\n    return /*#__PURE__*/React.createElement(\"span\", _extends({\n      id: id,\n      ref: ref,\n      className: clsx(classes.staticTooltip, classes[\"tooltipPlacement\".concat(capitalize(tooltipPlacement))], !open && classes.staticTooltipClosed)\n    }, other), /*#__PURE__*/React.createElement(\"span\", {\n      style: transitionStyle,\n      id: \"\".concat(id, \"-label\"),\n      className: classes.staticTooltipLabel\n    }, tooltipTitle), fab);\n  }\n\n  return /*#__PURE__*/React.createElement(Tooltip, _extends({\n    id: id,\n    ref: ref,\n    title: tooltipTitle,\n    placement: tooltipPlacement,\n    onClose: handleTooltipClose,\n    onOpen: handleTooltipOpen,\n    open: open && tooltipOpen,\n    classes: TooltipClasses\n  }, other), fab);\n});\nprocess.env.NODE_ENV !== \"production\" ? SpeedDialAction.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Adds a transition delay, to allow a series of SpeedDialActions to be animated.\n   */\n  delay: PropTypes.number,\n\n  /**\n   * Props applied to the [`Fab`](/api/fab/) component.\n   */\n  FabProps: PropTypes.object,\n\n  /**\n   * The Icon to display in the SpeedDial Fab.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the tooltip is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * `classes` prop applied to the [`Tooltip`](/api/tooltip/) element.\n   */\n  TooltipClasses: PropTypes.object,\n\n  /**\n   * Make the tooltip always visible when the SpeedDial is open.\n   */\n  tooltipOpen: PropTypes.bool,\n\n  /**\n   * Placement of the tooltip.\n   */\n  tooltipPlacement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * Label to display in the tooltip.\n   */\n  tooltipTitle: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSpeedDialAction'\n})(SpeedDialAction);"]},"metadata":{},"sourceType":"module"}