{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Projects/Scholastic-Quiz/src/pages/ForgotPassword.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Button, Typography } from \"@material-ui/core\";\nimport TextInput from '../components/TextInput';\nimport EmailValidator from \"email-validator\";\nimport './ForgotPassword.css';\nimport axios from \"axios\";\nimport Loading from \"./Loading\";\n\nfunction ForgotPassword() {\n  const [email, changeEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [emailChanged, setEmailChanged] = useState(false);\n  const [password, changePassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [passwordChanged, setPasswordChanged] = useState(false);\n  const [confirmPassword, setConfirmedPassword] = useState(\"\");\n  const [tokenSent, setTokenSent] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handleEmailChange = event => {\n    setEmailChanged(true);\n    changeEmail(event.target.value);\n  };\n\n  const handlePasswordChange = event => {\n    setPasswordChanged(true);\n    changePassword(event.target.value);\n  };\n\n  const mailErrorText = \"Email cannot be empty!\";\n  const passwordErrorText = \"Password cannot be empty!\";\n\n  const handleReset = async event => {\n    event.preventDefault();\n    setEmailChanged(true);\n    let errors = false;\n\n    if (email.length === 0) {\n      setEmailError(mailErrorText);\n      errors = true;\n    } else if (!EmailValidator.validate(email)) {\n      setEmailError(\"Invalid email address!\");\n      errors = true;\n    }\n\n    if (!errors && emailError.length === 0) {\n      setLoading(true);\n      let url = `https://scholastic-quiz-app.herokuapp.com/forgot?email=${email}`;\n      let response = null;\n\n      try {\n        await axios.post(url).then(res => response = res);\n        console.log(response);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    setTokenSent(true);\n    setLoading(false);\n  };\n\n  const handleConfirmPasswordChange = event => {\n    setConfirmedPassword(event.target.value);\n  };\n\n  useEffect(() => {\n    if (email.length === 0) setEmailError(mailErrorText);else setEmailError(\"\");\n    if (password.length === 0) setPasswordError(passwordErrorText);else setPasswordError(\"\");\n  }, [email, password]);\n  if (loading) return /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  });else if (!tokenSent) {\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"login-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h3\",\n      color: \"primary\",\n      className: \"login-head forgot-head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, \"Forgot Password\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 111\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      error: emailChanged ? emailError.length === 0 ? false : true : false,\n      helperText: emailChanged ? emailError.length === 0 ? null : emailError : null,\n      id: \"email\",\n      label: \"Email\",\n      type: \"email\",\n      className: \"form-input\",\n      variant: \"outlined\",\n      value: email,\n      onChange: handleEmailChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: \"login-btn\",\n      onClick: handleReset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, \"Send mail\")));\n  } else if (tokenSent) {\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"login-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h3\",\n      color: \"primary\",\n      className: \"login-head forgot-head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }, \"Forgot Password\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 111\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      error: passwordChanged ? passwordError.length === 0 ? false : true : false,\n      helperText: passwordChanged ? passwordError.length === 0 ? null : passwordError : null,\n      id: \"password\",\n      label: \"New Password\",\n      type: \"password\",\n      className: \"form-input\",\n      variant: \"outlined\",\n      value: password,\n      onChange: handlePasswordChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(TextInput, {\n      error: confirmPasswordError.length === 0 ? false : true,\n      helperText: confirmPasswordError,\n      id: \"confirm-password\",\n      label: \"Confirm Password\",\n      type: \"password\",\n      className: \"form-input\",\n      variant: \"outlined\",\n      value: confirmPassword,\n      onChange: handleConfirmPasswordChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: \"login-btn\",\n      onClick: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, \"Reset Password\")));\n  }\n}\n\nexport default ForgotPassword;","map":{"version":3,"sources":["/Users/mac/Documents/Projects/Scholastic-Quiz/src/pages/ForgotPassword.js"],"names":["React","useState","useEffect","Container","Button","Typography","TextInput","EmailValidator","axios","Loading","ForgotPassword","email","changeEmail","emailError","setEmailError","emailChanged","setEmailChanged","password","changePassword","passwordError","setPasswordError","passwordChanged","setPasswordChanged","confirmPassword","setConfirmedPassword","tokenSent","setTokenSent","loading","setLoading","handleEmailChange","event","target","value","handlePasswordChange","mailErrorText","passwordErrorText","handleReset","preventDefault","errors","length","validate","url","response","post","then","res","console","log","error","handleConfirmPasswordChange","confirmPasswordError","handleSubmit"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { Container, Button, Typography } from \"@material-ui/core\";\nimport TextInput from '../components/TextInput';\nimport EmailValidator from \"email-validator\";\nimport './ForgotPassword.css';\nimport axios from \"axios\";\nimport Loading from \"./Loading\";\n\nfunction ForgotPassword() {\n\tconst [email, changeEmail] = useState(\"\");\n\tconst [emailError, setEmailError] = useState(\"\");\n\tconst [emailChanged, setEmailChanged] = useState(false);\n\tconst [password, changePassword] = useState(\"\");\n\tconst [passwordError, setPasswordError] = useState(\"\");\n\tconst [passwordChanged, setPasswordChanged] = useState(false);\n\n\tconst [confirmPassword, setConfirmedPassword] = useState(\"\");\n\n\tconst [tokenSent, setTokenSent] = useState(false);\n\tconst [loading, setLoading] = useState(false);\n\n\tconst handleEmailChange = (event) => {\n\t\tsetEmailChanged(true);\n\t\tchangeEmail(event.target.value);\n\t}\n\n\tconst handlePasswordChange = (event) => {\n\t\tsetPasswordChanged(true);\n\t\tchangePassword(event.target.value);\n\t}\n\n\tconst mailErrorText = \"Email cannot be empty!\";\n\tconst passwordErrorText = \"Password cannot be empty!\";\n\n\tconst handleReset = async (event) => {\n\t\tevent.preventDefault();\n\n\t\tsetEmailChanged(true);\n\n\t\tlet errors = false;\n\n\t\tif(email.length === 0) {\n\t\t\tsetEmailError(mailErrorText);\n\t\t\terrors = true;\n\t\t} else if(!EmailValidator.validate(email)) {\n\t\t\tsetEmailError(\"Invalid email address!\");\n\t\t\terrors = true;\n\t\t}\n\n\t\tif(!errors && emailError.length === 0) {\n\t\t\tsetLoading(true);\n\t\t\tlet url = `https://scholastic-quiz-app.herokuapp.com/forgot?email=${email}`\n\n\t\t\tlet response = null;\n\n\t\t\ttry {\n\t\t\t\tawait axios.post(url).then(res => response = res);\n\t\t\t\tconsole.log(response);\n\t\t\t} catch(error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t}\n\t\tsetTokenSent(true);\n\t\tsetLoading(false);\n\t}\n\n\tconst handleConfirmPasswordChange = (event) => {\n\t\tsetConfirmedPassword(event.target.value);\n\t}\n\n\tuseEffect(() => {\n\t\tif(email.length === 0) setEmailError(mailErrorText);\n\t\telse setEmailError(\"\");\n\n\t\tif(password.length === 0) setPasswordError(passwordErrorText);\n\t\telse setPasswordError(\"\");\n\t}, [email, password]);\n\n\tif(loading) return <Loading />\n\telse if(!tokenSent) {\n\t\treturn (\n\t\t\t\t<Container className=\"login-page\">\n\t\t\t\t\t<div className=\"login-form\">\n\t\t\t\t\t\t<Typography variant=\"h3\" color=\"primary\" className=\"login-head forgot-head\">Forgot Password</Typography><br />\n\t\t\t\t\t\t<form className=\"form\">\n\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\terror={emailChanged? (emailError.length === 0? false: true): false}\n\t\t\t\t\t\t\t\thelperText={emailChanged? (emailError.length === 0? null: emailError): null}\n\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\tclassName=\"form-input\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\tonChange={handleEmailChange}></TextInput>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t<Button className=\"login-btn\" onClick={handleReset}>Send mail</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</Container>\n\t\t)\n\t}\n\telse if(tokenSent) {\n\t\treturn (\n\t\t\t<Container className=\"login-page\">\n\t\t\t\t\t<div className=\"login-form\">\n\t\t\t\t\t\t<Typography variant=\"h3\" color=\"primary\" className=\"login-head forgot-head\">Forgot Password</Typography><br />\n\t\t\t\t\t\t<form className=\"form\">\n\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\terror={passwordChanged? (passwordError.length === 0? false: true): false}\n\t\t\t\t\t\t\t\thelperText={passwordChanged? (passwordError.length === 0? null: passwordError): null}\n\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\tlabel=\"New Password\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tclassName=\"form-input\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\tonChange={handlePasswordChange}></TextInput>\n\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\terror={confirmPasswordError.length === 0? false: true}\n\t\t\t\t\t\t\t\thelperText={confirmPasswordError}\n\t\t\t\t\t\t\t\tid=\"confirm-password\"\n\t\t\t\t\t\t\t\tlabel=\"Confirm Password\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tclassName=\"form-input\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\t\t\t\tonChange={handleConfirmPasswordChange}></TextInput>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t<Button className=\"login-btn\" onClick={handleSubmit}>Reset Password</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</Container>\n\t\t)\n\t}\n}\n\nexport default ForgotPassword;"]},"metadata":{},"sourceType":"module"}