{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Projects/Scholastic-Quiz/src/components/PrivateRoute.js\";\nimport React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport InfoContext from \"../context/InfoContext\";\n\nfunction PrivateRoute({\n  component: Component,\n  ...rest\n}) {\n  const {\n    isAdmin\n  } = useContext(InfoContext);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => isAdmin ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 14\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 6\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 3\n    }\n  }));\n}\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/mac/Documents/Projects/Scholastic-Quiz/src/components/PrivateRoute.js"],"names":["React","useContext","Route","Redirect","InfoContext","PrivateRoute","component","Component","rest","isAdmin","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;AAEA,SAASC,YAAT,CAAsB;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAtB,EAAuD;AACtD,QAAM;AAACC,IAAAA;AAAD,MAAYR,UAAU,CAACG,WAAD,CAA5B;AACA,sBACC,oBAAC,KAAD,oBAAWI,IAAX;AAAiB,IAAA,MAAM,EAAGE,KAAD,IACxBD,OAAO,gBAAG,oBAAC,SAAD,oBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH,gBACL,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD;AAMA;;AAED,eAAeL,YAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport {Route, Redirect} from \"react-router-dom\";\nimport InfoContext from \"../context/InfoContext\";\n\nfunction PrivateRoute({component: Component, ...rest}) {\n\tconst {isAdmin} = useContext(InfoContext);\n\treturn (\n\t\t<Route {...rest} render={(props) => (\n\t\t\tisAdmin ? <Component {...props} />\n\t\t\t: <Redirect to=\"/\" />\n\t\t)} />\n\t)\n}\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}