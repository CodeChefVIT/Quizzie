{"ast":null,"code":"import getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport setUTCDay from '../../../_lib/setUTCDay/index.js';\nimport setUTCISODay from '../../../_lib/setUTCISODay/index.js';\nimport setUTCISOWeek from '../../../_lib/setUTCISOWeek/index.js';\nimport setUTCWeek from '../../../_lib/setUTCWeek/index.js';\nimport startOfUTCISOWeek from '../../../_lib/startOfUTCISOWeek/index.js';\nimport startOfUTCWeek from '../../../_lib/startOfUTCWeek/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n\n};\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern(pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  var value = parseInt(matchResult[0], 10);\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\n}\n\nfunction parseNDigits(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction parseNDigitsSigned(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction dayPeriodEnumToHours(enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n\n\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n        // A, B\n\n        case 'GGGGG':\n          return match.era(string, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n\n        case 'GGGG':\n        default:\n          return match.era(string, {\n            width: 'wide'\n          }) || match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n      }\n    },\n    set: function (date, flags, value, _options) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['R', 'u', 't', 'T']\n  },\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, _options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'Yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (_date, _flags, value, _options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'Qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'QQQ':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'QQQQQ':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'QQQQ':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'qqq':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'qqqqq':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'qqqq':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Month\n  M: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'MM':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Mo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'MMM':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n\n        case 'MMMMM':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n\n        case 'MMMM':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'LL':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Lo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'LLL':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n\n        case 'LLLLL':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n\n        case 'LLLL':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'wo':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'Io':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Day of the month\n  d: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string);\n\n        case 'do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of year\n  D: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\n\n        case 'Do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'EEEEE':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'EEEEEE':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'EEEE':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'eo':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'eee':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'eeeee':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'eeeeee':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'eeee':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']\n  },\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'co':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'ccc':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n\n        case 'ccccc':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n\n        case 'cccccc':\n          return match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n\n        case 'cccc':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']\n  },\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        if (value === 0) {\n          return 7;\n        }\n\n        return value;\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, string);\n        // 2nd\n\n        case 'io':\n          return match.ordinalNumber(string, {\n            unit: 'day'\n          });\n        // Tue\n\n        case 'iii':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // T\n\n        case 'iiiii':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tu\n\n        case 'iiiiii':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tuesday\n\n        case 'iiii':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 7;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCISODay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']\n  },\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaaa':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['b', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbbb':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBBB':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 't', 'T']\n  },\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string);\n\n        case 'ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 12;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['H', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string);\n\n        case 'Ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 23;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string);\n\n        case 'Ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'k', 't', 'T']\n  },\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string);\n\n        case 'ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 24;\n    },\n    set: function (date, _flags, value, _options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']\n  },\n  // Minute\n  m: {\n    priority: 60,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string);\n\n        case 'mo':\n          return match.ordinalNumber(string, {\n            unit: 'minute'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Second\n  s: {\n    priority: 50,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string);\n\n        case 'so':\n          return match.ordinalNumber(string, {\n            unit: 'second'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Fraction of second\n  S: {\n    priority: 30,\n    parse: function (string, token, _match, _options) {\n      var valueCallback = function (value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n\n      return parseNDigits(token.length, string, valueCallback);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMilliseconds(value);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'x']\n  },\n  // Timezone (ISO-8601)\n  x: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'X']\n  },\n  // Seconds timestamp\n  t: {\n    priority: 40,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  },\n  // Milliseconds timestamp\n  T: {\n    priority: 20,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  }\n};\nexport default parsers;","map":{"version":3,"sources":["/Users/mac/Documents/Projects/Quizzie/Frontend/node_modules/date-fns/esm/parse/_lib/parsers/index.js"],"names":["getUTCWeekYear","setUTCDay","setUTCISODay","setUTCISOWeek","setUTCWeek","startOfUTCISOWeek","startOfUTCWeek","MILLISECONDS_IN_HOUR","MILLISECONDS_IN_MINUTE","MILLISECONDS_IN_SECOND","numericPatterns","month","date","dayOfYear","week","hour23h","hour24h","hour11h","hour12h","minute","second","singleDigit","twoDigits","threeDigits","fourDigits","anyDigitsSigned","singleDigitSigned","twoDigitsSigned","threeDigitsSigned","fourDigitsSigned","timezonePatterns","basicOptionalMinutes","basic","basicOptionalSeconds","extended","extendedOptionalSeconds","parseNumericPattern","pattern","string","valueCallback","matchResult","match","value","parseInt","rest","slice","length","parseTimezonePattern","sign","hours","minutes","seconds","parseAnyDigitsSigned","parseNDigits","n","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","enumValue","normalizeTwoDigitYear","twoDigitYear","currentYear","isCommonEra","absCurrentYear","result","rangeEnd","rangeEndCentury","Math","floor","isPreviousCentury","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","isLeapYearIndex","year","parsers","G","priority","parse","token","_options","era","width","set","flags","setUTCFullYear","setUTCHours","incompatibleTokens","y","isTwoDigitYear","ordinalNumber","unit","validate","_date","getUTCFullYear","normalizedTwoDigitYear","Y","options","firstWeekContainsDate","R","_match","_flags","firstWeekOfYear","Date","u","Q","quarter","context","setUTCMonth","q","M","L","w","I","d","isLeapYear","getUTCMonth","setUTCDate","D","E","day","e","wholeWeekDays","weekStartsOn","c","i","a","dayPeriod","b","B","h","isPM","getUTCHours","H","K","k","m","setUTCMinutes","s","setUTCSeconds","S","pow","setUTCMilliseconds","X","timestampIsSet","getTime","x","t","_token","T"],"mappings":"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","sourcesContent":["import getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport setUTCDay from '../../../_lib/setUTCDay/index.js';\nimport setUTCISODay from '../../../_lib/setUTCISODay/index.js';\nimport setUTCISOWeek from '../../../_lib/setUTCISOWeek/index.js';\nimport setUTCWeek from '../../../_lib/setUTCWeek/index.js';\nimport startOfUTCISOWeek from '../../../_lib/startOfUTCISOWeek/index.js';\nimport startOfUTCWeek from '../../../_lib/startOfUTCWeek/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n\n};\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern(pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  var value = parseInt(matchResult[0], 10);\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\n}\n\nfunction parseNDigits(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction parseNDigitsSigned(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction dayPeriodEnumToHours(enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n\n\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n        // A, B\n\n        case 'GGGGG':\n          return match.era(string, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n\n        case 'GGGG':\n        default:\n          return match.era(string, {\n            width: 'wide'\n          }) || match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n      }\n    },\n    set: function (date, flags, value, _options) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['R', 'u', 't', 'T']\n  },\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, _options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'Yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (_date, _flags, value, _options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'Qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'QQQ':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'QQQQQ':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'QQQQ':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'qqq':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'qqqqq':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'qqqq':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Month\n  M: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'MM':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Mo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'MMM':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n\n        case 'MMMMM':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n\n        case 'MMMM':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'LL':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Lo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'LLL':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n\n        case 'LLLLL':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n\n        case 'LLLL':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'wo':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'Io':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Day of the month\n  d: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string);\n\n        case 'do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of year\n  D: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\n\n        case 'Do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'EEEEE':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'EEEEEE':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'EEEE':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'eo':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'eee':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'eeeee':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'eeeeee':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'eeee':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']\n  },\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'co':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'ccc':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n\n        case 'ccccc':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n\n        case 'cccccc':\n          return match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n\n        case 'cccc':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']\n  },\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        if (value === 0) {\n          return 7;\n        }\n\n        return value;\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, string);\n        // 2nd\n\n        case 'io':\n          return match.ordinalNumber(string, {\n            unit: 'day'\n          });\n        // Tue\n\n        case 'iii':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // T\n\n        case 'iiiii':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tu\n\n        case 'iiiiii':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tuesday\n\n        case 'iiii':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 7;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCISODay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']\n  },\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaaa':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['b', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbbb':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBBB':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 't', 'T']\n  },\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string);\n\n        case 'ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 12;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['H', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string);\n\n        case 'Ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 23;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string);\n\n        case 'Ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'k', 't', 'T']\n  },\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string);\n\n        case 'ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 24;\n    },\n    set: function (date, _flags, value, _options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']\n  },\n  // Minute\n  m: {\n    priority: 60,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string);\n\n        case 'mo':\n          return match.ordinalNumber(string, {\n            unit: 'minute'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Second\n  s: {\n    priority: 50,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string);\n\n        case 'so':\n          return match.ordinalNumber(string, {\n            unit: 'second'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Fraction of second\n  S: {\n    priority: 30,\n    parse: function (string, token, _match, _options) {\n      var valueCallback = function (value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n\n      return parseNDigits(token.length, string, valueCallback);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMilliseconds(value);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'x']\n  },\n  // Timezone (ISO-8601)\n  x: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'X']\n  },\n  // Seconds timestamp\n  t: {\n    priority: 40,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  },\n  // Milliseconds timestamp\n  T: {\n    priority: 20,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  }\n};\nexport default parsers;"]},"metadata":{},"sourceType":"module"}