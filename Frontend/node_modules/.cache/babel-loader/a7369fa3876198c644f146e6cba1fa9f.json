{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Projects/Scholastic-Quiz/src/pages/RegisterPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport './RegisterPage.css';\nimport { Container, Typography, Button, Checkbox, FormControlLabel } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport TextInput from \"../components/TextInput\";\nimport * as EmailValidator from \"email-validator\";\nimport axios from 'axios';\n\nfunction RegisterPage() {\n  const [name, changeName] = useState(\" \");\n  const [nameError, setNameError] = useState(\"\");\n  const [email, changeEmail] = useState(\" \");\n  const [emailError, setEmailError] = useState(\"\");\n  const [password, changePassword] = useState(\" \");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [signedUp, setSignedUp] = useState(true);\n\n  const emptyText = type => `${type} cannot be empty`;\n\n  const handleNameChange = event => {\n    changeName(event.target.value);\n  };\n\n  const handleEmailChange = event => {\n    changeEmail(event.target.value);\n  };\n\n  const handlePasswordChange = event => {\n    changePassword(event.target.value);\n  };\n\n  useEffect(() => {\n    if (name.length === 0) setNameError(emptyText(\"Name\"));else setNameError(\"\");\n    if (email.length === 0) setEmailError(emptyText(\"Email\"));else setEmailError(\"\");\n    if (password.length === 0) setPasswordError(emptyText(\"Password\"));else setPasswordError(\"\");\n  }, [name, email, password]);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    let errors = false;\n\n    if (name === \" \") {\n      setEmailError(emptyText(\"Name\"));\n      errors = true;\n    }\n\n    if (email === \" \") {\n      setEmailError(emptyText(\"Email\"));\n      errors = true;\n    } else if (!EmailValidator.validate(email)) {\n      setEmailError(\"Invalid email address!\");\n      errors = true;\n    }\n\n    if (password === \" \") {\n      setPasswordError(emptyText(\"Password\"));\n      errors = true;\n    }\n\n    if (!errors && emailError.length === 0 && passwordError.length === 0) {\n      let url = `https://scholastic-quiz-app.herokuapp.com/api/user/register?\n\t\t\t\t\t\tname=${name}&email=${email}&password=${password}`;\n      let response = null;\n      await axios.post(url).then(res => {\n        response = res;\n      });\n\n      if (response.status === 200) {\n        setSignedUp(true);\n        changeEmail(\" \");\n        changeName(\" \");\n      }\n\n      changePassword(\" \");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"login-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"hg-pin.png\",\n    className: \"signup-img\",\n    alt: \"Mokingjay Pin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    color: \"primary\",\n    className: \"login-head signup-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, \"Join the force!\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 109\n    }\n  }), signedUp === true ? /*#__PURE__*/React.createElement(Alert, {\n    severity: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, \"Succesfully Signed Up!\") : null, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    error: nameError.length === 0 ? false : true,\n    helperText: nameError,\n    id: \"name\",\n    label: \"Name\",\n    type: \"text\",\n    className: \"form-input\",\n    variant: \"outlined\",\n    onChange: handleNameChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(TextInput, {\n    error: emailError.length === 0 ? false : true,\n    helperText: emailError,\n    id: \"email\",\n    label: \"Email\",\n    type: \"email\",\n    className: \"form-input\",\n    variant: \"outlined\",\n    onChange: handleEmailChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(TextInput, {\n    error: passwordError.length === 0 ? false : true,\n    helperText: passwordError,\n    id: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    className: \"form-input\",\n    variant: \"outlined\",\n    onChange: handlePasswordChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"login-btn\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, \"Sign Up\")));\n}\n\nexport default RegisterPage;","map":{"version":3,"sources":["/Users/mac/Documents/Projects/Scholastic-Quiz/src/pages/RegisterPage.js"],"names":["React","useState","useEffect","Container","Typography","Button","Checkbox","FormControlLabel","Alert","TextInput","EmailValidator","axios","RegisterPage","name","changeName","nameError","setNameError","email","changeEmail","emailError","setEmailError","password","changePassword","passwordError","setPasswordError","signedUp","setSignedUp","emptyText","type","handleNameChange","event","target","value","handleEmailChange","handlePasswordChange","length","handleSubmit","preventDefault","errors","validate","url","response","post","then","res","status"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './RegisterPage.css';\nimport { Container, Typography, Button, Checkbox, FormControlLabel } from \"@material-ui/core\";\nimport {Alert} from \"@material-ui/lab\";\nimport TextInput from \"../components/TextInput\";\nimport * as EmailValidator from \"email-validator\";\nimport axios from 'axios';\n\n\nfunction RegisterPage() {\n\tconst [name, changeName] = useState(\" \");\n\tconst [nameError, setNameError] = useState(\"\");\n\tconst [email, changeEmail] = useState(\" \");\n\tconst [emailError, setEmailError] = useState(\"\");\n\tconst [password, changePassword] = useState(\" \");\n\tconst [passwordError, setPasswordError] = useState(\"\");\n\n\tconst [signedUp, setSignedUp] = useState(true);\n\n\tconst emptyText = (type) =>  `${type} cannot be empty`;\n\n\tconst handleNameChange = (event) => {\n\t\tchangeName(event.target.value);\n\t}\n\n\tconst handleEmailChange = (event) => {\n\t\tchangeEmail(event.target.value);\n\t}\n\n\tconst handlePasswordChange = (event) => {\n\t\tchangePassword(event.target.value);\n\t}\n\n\tuseEffect(() => {\n\t\tif(name.length === 0) setNameError(emptyText(\"Name\"));\n\t\telse setNameError(\"\");\n\n\t\tif(email.length === 0) setEmailError(emptyText(\"Email\"));\n\t\telse setEmailError(\"\");\n\n\t\tif(password.length === 0) setPasswordError(emptyText(\"Password\"));\n\t\telse setPasswordError(\"\");\n\n\t}, [name, email, password]);\n\n\tconst handleSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\tlet errors = false;\n\n\t\tif(name === \" \") {\n\t\t\tsetEmailError(emptyText(\"Name\"));\n\t\t\terrors = true;\n\t\t}\n\n\t\tif(email === \" \") {\n\t\t\tsetEmailError(emptyText(\"Email\"));\n\t\t\terrors = true;\n\t\t} else if(!EmailValidator.validate(email)) {\n\t\t\tsetEmailError(\"Invalid email address!\");\n\t\t\terrors = true;\n\t\t}\n\t\tif(password === \" \") {\n\t\t\tsetPasswordError(emptyText(\"Password\"));\n\t\t\terrors = true;\n\t\t}\n\n\t\tif(!errors && emailError.length === 0 && passwordError.length === 0) {\n\t\t\tlet url = `https://scholastic-quiz-app.herokuapp.com/api/user/register?\n\t\t\t\t\t\tname=${name}&email=${email}&password=${password}`;\n\n\t\t\tlet response = null;\n\t\t\tawait axios.post(url).then(res => {\n\t\t\t\tresponse = res;\n\t\t\t});\n\n\t\t\tif(response.status === 200) {\n\t\t\t\tsetSignedUp(true);\n\t\t\t\tchangeEmail(\" \");\n\t\t\t\tchangeName(\" \");\n\t\t\t}\n\t\t\tchangePassword(\" \");\n\t\t}\n\t}\n\n\treturn (\n\t\t<Container className=\"login-page\">\n\t\t\t<div className=\"login-form\">\n\t\t\t\t<img src=\"hg-pin.png\" className=\"signup-img\" alt=\"Mokingjay Pin\"></img>\n\t\t\t\t<Typography variant=\"h3\" color=\"primary\" className=\"login-head signup-text\">Join the force!</Typography><br />\n\t\t\t\t{signedUp === true? <Alert severity=\"success\">Succesfully Signed Up!</Alert>: null}\n\t\t\t\t<form className=\"form\">\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\terror={nameError.length === 0? false: true}\n\t\t\t\t\t\thelperText={nameError}\n\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\tlabel=\"Name\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"form-input\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tonChange={handleNameChange}></TextInput>\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\terror={emailError.length === 0? false: true}\n\t\t\t\t\t\thelperText={emailError}\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tclassName=\"form-input\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tonChange={handleEmailChange}></TextInput>\n\t\t\t\t\t<br />\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\terror={passwordError.length === 0? false: true}\n\t\t\t\t\t\thelperText={passwordError}\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\tclassName=\"form-input\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tonChange={handlePasswordChange}></TextInput>\n\t\t\t\t</form>\n\t\t\t\t<Button className=\"login-btn\" onClick={handleSubmit}>Sign Up</Button>\n\t\t\t</div>\n\t\t</Container>\n\t)\n}\n\nexport default RegisterPage;"]},"metadata":{},"sourceType":"module"}