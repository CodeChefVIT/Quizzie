{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Projects/Scholastic-Quiz/src/pages/Quiz.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Question from \"../components/Question\";\nimport { Grid, Snackbar, FormControl, FormLabel, RadioGroup, FormControlLabel, Radio } from '@material-ui/core';\nimport './Quiz.css';\nimport Loading from \"./Loading\";\nimport axios from \"axios\";\n\nfunction Quiz() {\n  const [currentStep, setStep] = useState(1);\n  const [submit, setsubmit] = useState(false);\n  const [times, settimes] = useState(false);\n  const [min, setMin] = useState('20');\n  const [sec, setSec] = useState('00');\n  const [loading, setLoading] = useState(true);\n  const [allQuestions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [currentAns, setCurrentAns] = useState(null);\n  const [allChosenAns, setAllAns] = useState(null);\n  let seconds = 1200; //20 min === 1200 seconds  Total time in seconds\n\n  const handleSubmit = event => {\n    setsubmit(true);\n  };\n\n  const timesUp = () => {\n    settimes(true);\n  };\n\n  const _next = () => {\n    setStep(currentStep + 1);\n    setCurrentQuestion(currentQuestion + 1);\n  };\n\n  const _prev = () => {\n    setStep(currentStep - 1);\n    setCurrentQuestion(currentQuestion - 1);\n  };\n\n  const previousButton = () => {\n    if (currentStep !== 1) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        className: \"quiz-btn prev-button\",\n        onClick: _prev,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 6\n        }\n      }, \"Previous\"));\n    }\n\n    return null;\n  };\n\n  const nextButton = () => {\n    if (currentStep < 15) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        className: \"quiz-btn next-button\",\n        onClick: _next,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }\n      }, \"Next\"));\n    } else if (currentStep === 15) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        className: \"quiz-btn submit-button\",\n        onClick: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }\n      }, \"Submit\"));\n    }\n\n    return null;\n  };\n\n  const tick = () => {\n    var st = seconds;\n    var sr = seconds;\n\n    if (sr > 0) {\n      st--;\n    } else {\n      timesUp();\n    }\n\n    seconds = st;\n    var m = Math.floor(st / 60);\n    var s = st - m * 60;\n\n    if (m < 10) {\n      setMin(\"0\" + m);\n    } else {\n      setMin(m);\n    }\n\n    if (s < 10) {\n      setSec(\"0\" + s);\n    } else {\n      setSec(s);\n    }\n  };\n\n  const handleOptionChange = event => {\n    setCurrentAns(event.target.value);\n    let newState = allChosenAns;\n    newState[currentQuestion].option = event.target.value;\n    setAllAns(newState);\n  };\n\n  const getQuestions = async () => {\n    let token = localStorage.getItem('authToken');\n    let url = `https://scholastic-quiz-app.herokuapp.com/questionsFifteen`;\n    let questionsData = [];\n    let answerData = [];\n\n    try {\n      await axios.get(url, {\n        headers: {\n          \"auth-token\": token\n        }\n      }).then(res => {\n        res.data.map(question => {\n          let questionObj = {\n            q_id: question._id,\n            text: question.description,\n            options: question.alternatives\n          };\n          questionsData.push(questionObj);\n          let ansObj = {\n            q_id: question._id,\n            option: null\n          };\n          answerData.push(ansObj);\n        });\n      });\n      setQuestions(questionsData);\n    } catch (error) {\n      console.log(error);\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getQuestions();\n  }, []);\n  useState(() => {\n    console.log(allChosenAns);\n  }, [allChosenAns]);\n  return loading ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quiz-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    xs: 12,\n    spacing: 5,\n    className: \"quiz-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    md: 8,\n    lg: 7,\n    className: \"q-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, \"Question \", currentStep)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    md: 8,\n    lg: 7,\n    className: \"timer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, \"Time Remaining \", /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, min, \":\", sec))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    md: 8,\n    lg: 7,\n    style: {\n      margin: 0,\n      padding: '2%',\n      backgroundColor: '#111',\n      borderBottom: '5px solid #222',\n      minHeight: '50vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    style: {\n      margin: 'auto',\n      width: \"100%\"\n    },\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    className: \"label\",\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 8\n    }\n  }, allQuestions[currentQuestion].text), /*#__PURE__*/React.createElement(RadioGroup, {\n    \"aria-label\": \"correct-choice\",\n    value: currentAns,\n    onChange: handleOptionChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 8\n    }\n  }, allQuestions[currentQuestion].options.map(option => {\n    return /*#__PURE__*/React.createElement(FormControlLabel, {\n      key: option.text,\n      value: option.text,\n      control: /*#__PURE__*/React.createElement(Radio, {\n        className: \"radio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 76\n        }\n      }),\n      label: option.text,\n      style: {\n        margin: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }\n    });\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    md: 8,\n    lg: 7,\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, previousButton()), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, nextButton()))), /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    open: submit,\n    message: \"Submitting..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    open: times,\n    message: \"TimesUp.. Submitting..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default Quiz;\n\nfunction Step(props) {\n  let qid = \"Hello\"; //Random Question Id code\n\n  return /*#__PURE__*/React.createElement(Question, {\n    id: qid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 3\n    }\n  });\n}","map":{"version":3,"sources":["/Users/mac/Documents/Projects/Scholastic-Quiz/src/pages/Quiz.js"],"names":["React","useState","useEffect","Question","Grid","Snackbar","FormControl","FormLabel","RadioGroup","FormControlLabel","Radio","Loading","axios","Quiz","currentStep","setStep","submit","setsubmit","times","settimes","min","setMin","sec","setSec","loading","setLoading","allQuestions","setQuestions","currentQuestion","setCurrentQuestion","currentAns","setCurrentAns","allChosenAns","setAllAns","seconds","handleSubmit","event","timesUp","_next","_prev","previousButton","nextButton","tick","st","sr","m","Math","floor","s","handleOptionChange","target","value","newState","option","getQuestions","token","localStorage","getItem","url","questionsData","answerData","get","headers","then","res","data","map","question","questionObj","q_id","_id","text","description","options","alternatives","push","ansObj","error","console","log","margin","padding","backgroundColor","borderBottom","minHeight","width","vertical","horizontal","Step","props","qid"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Question from \"../components/Question\"\nimport { Grid, Snackbar, FormControl, FormLabel, RadioGroup, FormControlLabel, Radio } from '@material-ui/core'\nimport './Quiz.css';\nimport Loading from \"./Loading\";\nimport axios from \"axios\";\n\nfunction Quiz() {\n\tconst [currentStep, setStep] = useState(1);\n\tconst [submit, setsubmit] = useState(false);\n\tconst [times, settimes] = useState(false);\n\tconst [min, setMin] = useState('20');\n\tconst [sec, setSec] = useState('00');\n\n\tconst [loading, setLoading] = useState(true);\n\tconst [allQuestions, setQuestions] = useState([]);\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [currentAns, setCurrentAns] = useState(null);\n\n\tconst [allChosenAns, setAllAns] = useState(null);\n\n\tlet seconds = 1200; //20 min === 1200 seconds  Total time in seconds\n\n\tconst handleSubmit = event => {\n\t\tsetsubmit(true);\n\t}\n\tconst timesUp = () => {\n\t\tsettimes(true);\n\t}\n\tconst _next = () => {\n\t\tsetStep(currentStep + 1)\n\t\tsetCurrentQuestion(currentQuestion + 1);\n\t}\n\tconst _prev = () => {\n\t\tsetStep(currentStep - 1);\n\t\tsetCurrentQuestion(currentQuestion - 1);\n\t}\n\tconst previousButton = () => {\n\t\tif (currentStep !== 1) {\n\t\t\treturn (\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"quiz-btn prev-button\" onClick={_prev}>\n\t\t\t\t\t<p>Previous</p>\n\t\t\t\t</button>\n\t\t\t)\n\t\t}\n\t\treturn null;\n\t}\n\n\tconst nextButton = () => {\n\t\tif (currentStep < 15) {\n\t\t\treturn (\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"quiz-btn next-button\" onClick={_next}>\n\t\t\t\t\t<p>Next</p>\n\t\t\t\t</button>\n\t\t\t)\n\t\t} else if (currentStep === 15) {\n\t\t\treturn (\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"quiz-btn submit-button\" onClick={handleSubmit}>\n\t\t\t\t\t<p>Submit</p>\n\t\t\t\t</button>\n\t\t\t)\n\t\t}\n\t\treturn null;\n\t}\n\n\tconst tick = () => {\n\t\tvar st = seconds;\n\t\tvar sr = seconds;\n\t\tif (sr > 0) {\n\t\t\tst--;\n\t\t}\n\t\telse {\n\t\t\ttimesUp();\n\t\t}\n\t\tseconds = st;\n\t\tvar m = Math.floor(st / 60);\n\t\tvar s = st - (m * 60);\n\t\tif (m < 10) {\n\t\t\tsetMin(\"0\" + m);\n\t\t} else {\n\t\t\tsetMin(m);\n\t\t}\n\t\tif (s < 10) {\n\t\t\tsetSec(\"0\" + s);\n\t\t} else {\n\t\t\tsetSec(s);\n\t\t}\n\n\t}\n\n\tconst handleOptionChange = (event) => {\n\t\tsetCurrentAns(event.target.value);\n\t\t\n\t\tlet newState = allChosenAns;\n\t\tnewState[currentQuestion].option = event.target.value;\n\n\t\tsetAllAns(newState);\n\t}\n\n\tconst getQuestions = async () => {\n\t\tlet token = localStorage.getItem('authToken');\n\t\tlet url = `https://scholastic-quiz-app.herokuapp.com/questionsFifteen`;\n\n\t\tlet questionsData = [];\n\t\tlet answerData = [];\n\n\t\ttry {\n\t\t\tawait axios.get(url, {\n\t\t\t\theaders: {\n\t\t\t\t\t\"auth-token\": token\n\t\t\t\t}\n\t\t\t}).then(res => {\n\t\t\t\tres.data.map((question) => {\n\t\t\t\t\tlet questionObj = {\n\t\t\t\t\t\tq_id: question._id,\n\t\t\t\t\t\ttext: question.description,\n\t\t\t\t\t\toptions: question.alternatives,\n\t\t\t\t\t}\n\t\t\t\t\tquestionsData.push(questionObj);\n\n\t\t\t\t\tlet ansObj = {\n\t\t\t\t\t\tq_id: question._id,\n\t\t\t\t\t\toption: null,\n\t\t\t\t\t}\n\n\t\t\t\t\tanswerData.push(ansObj);\n\t\t\t\t})\n\t\t\t});\n\n\t\t\tsetQuestions(questionsData);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t\tsetLoading(false);\n\t}\n\n\tuseEffect(() => {\n\t\tgetQuestions();\n\t}, [])\n\n\tuseState(() => {\n\t\tconsole.log(allChosenAns);\n\t}, [allChosenAns])\n\n\n\treturn (\n\t\tloading ? <Loading />\n\t\t\t:\n\t\t\t<div className=\"quiz-page\">\n\t\t\t\t<Grid container xs={12} spacing={5} className=\"quiz-container\">\n\t\t\t\t\t<Grid item xs={10} md={8} lg={7} className=\"q-count\" >\n\t\t\t\t\t\t<h2 style={{ margin: 0 }}>Question {currentStep}</h2>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={10} md={8} lg={7} className=\"timer\">\n\t\t\t\t\t\t<p>Time Remaining <h2>{min}:{sec}</h2></p>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={10} md={8} lg={7} style={{ margin: 0, padding: '2%', backgroundColor: '#111', borderBottom: '5px solid #222', minHeight: '50vh' }}>\n\t\t\t\t\t\t<FormControl style={{ margin: 'auto', width: \"100%\" }} component=\"fieldset\">\n\t\t\t\t\t\t\t<FormLabel className=\"label\" component=\"legend\">{allQuestions[currentQuestion].text}</FormLabel>\n\t\t\t\t\t\t\t<RadioGroup aria-label=\"correct-choice\" value={currentAns} onChange={handleOptionChange}>\n\t\t\t\t\t\t\t\t{allQuestions[currentQuestion].options.map((option) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel key={option.text} value={option.text} control={<Radio className=\"radio\" />} label={option.text} style={{ margin: 0 }} />\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={10} md={8} lg={7} className=\"button\" >\n\t\t\t\t\t\t<Grid item xs={6} className=\"button\">\n\t\t\t\t\t\t\t{previousButton()}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={6} className=\"button\">\n\t\t\t\t\t\t\t{nextButton()}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'center', }} open={submit} message=\"Submitting..\" />\n\t\t\t\t<Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'center', }} open={times} message=\"TimesUp.. Submitting..\" />\n\n\t\t\t</div>\n\t)\n}\n\nexport default Quiz;\n\nfunction Step(props) {\n\tlet qid = \"Hello\"\n\t//Random Question Id code\n\treturn (\n\t\t<Question id={qid} />\n\t);\n}"]},"metadata":{},"sourceType":"module"}