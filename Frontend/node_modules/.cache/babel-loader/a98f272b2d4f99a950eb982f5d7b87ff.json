{"ast":null,"code":"import { createContext, useMemo, createElement, useContext } from 'react';\nimport { func, oneOfType, object, string, element, arrayOf } from 'prop-types';\nvar MuiPickersContext = createContext(null);\n\nvar MuiPickersUtilsProvider = function MuiPickersUtilsProvider(_ref) {\n  var Utils = _ref.utils,\n      children = _ref.children,\n      locale = _ref.locale,\n      libInstance = _ref.libInstance;\n  var utils = useMemo(function () {\n    return new Utils({\n      locale: locale,\n      instance: libInstance\n    });\n  }, [Utils, libInstance, locale]);\n  return createElement(MuiPickersContext.Provider, {\n    value: utils,\n    children: children\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? MuiPickersUtilsProvider.propTypes = {\n  utils: func.isRequired,\n  locale: oneOfType([object, string]),\n  children: oneOfType([element.isRequired, arrayOf(element.isRequired)]).isRequired\n} : void 0;\n\nvar checkUtils = function checkUtils(utils) {\n  if (!utils) {\n    // tslint:disable-next-line\n    throw new Error('Can not find utils in context. You either a) forgot to wrap your component tree in MuiPickersUtilsProvider; or b) mixed named and direct file imports.  Recommendation: use named imports from the module index.');\n  }\n};\n\nfunction useUtils() {\n  var utils = useContext(MuiPickersContext);\n  checkUtils(utils);\n  return utils;\n}\n\nexport { MuiPickersUtilsProvider as M, MuiPickersContext as a, useUtils as u };","map":{"version":3,"sources":["../../src/MuiPickersUtilsProvider.tsx","../../src/_shared/hooks/useUtils.ts"],"names":["MuiPickersContext","React","MuiPickersUtilsProvider","utils","Utils","children","locale","libInstance","instance","React.createElement","PropTypes","isRequired","checkUtils","useContext"],"mappings":";;IAKaA,iBAAiB,GAAGC,aAAAA,CAA1B,IAA0BA,C;;AAS1B,IAAMC,uBAA+D,GAAG,SAAlEA,uBAAkE,CAAA,IAAA,EAKzE;MAJGE,KAIH,GAAA,IAAA,CAJJD,K;MACAE,QAGI,GAAA,IAAA,CAHJA,Q;MACAC,MAEI,GAAA,IAAA,CAFJA,M;MACAC,WACI,GAAA,IAAA,CADJA,W;MAEMJ,KAAK,GAAG,OAAA,CAAc,YAAA;WAAM,IAAA,KAAA,CAAU;AAAEG,MAAAA,MAAM,EAAR,MAAA;AAAUE,MAAAA,QAAQ,EAAED;AAApB,KAAV,C;AAApB,GAAA,EAAkE,CAAA,KAAA,EAAA,WAAA,EAAhF,MAAgF,CAAlE,C;SAMPE,aAAAA,CAAC,iBAADA,CAAAA,QAAAA,EAAAA;AAA4B,IAAA,KAAK,EAAjCA,KAAAA;AAA0C,IAAA,QAAQ,EAAEJ;AAApDI,GAAAA,C;AAZF,CAAA;;AAeP,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA,uBAAuB,CAAvB,SAAA,GAAoC;AAClCN,EAAAA,KAAK,EAAEO,IAAAA,CAD2B,UAAA;AAElCJ,EAAAA,MAAM,EAAEI,SAAAA,CAAoB,CAAA,MAAA,EAFM,MAEN,CAApBA,CAF0B;AAGlCL,EAAAA,QAAQ,EAAEK,SAAAA,CAAoB,CAC5BA,OAAAA,CAD4B,UAAA,EAE5BA,OAAAA,CAAkBA,OAAAA,CAFVA,UAERA,CAF4B,CAApBA,CAAAA,CAGPC;AAN+B,CAApC,GAAA,KAAA,CAAA;;ACxBO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAA,KAAA,EAA6D;MACjF,CAAJ,K,EAAY;;UAEJ,IAAA,KAAA,CAAN,kNAAM,C;;AAHH,CAAA;;AASA,SAAA,QAAA,GAAoB;MACnBT,KAAK,GAAGU,UAAU,CAAxB,iBAAwB,C;AACxBD,EAAAA,UAAU,CAAVA,KAAU,CAAVA;SAEA,K","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { IUtils } from '@date-io/core/IUtils';\nimport { MaterialUiPickersDate } from './typings/date';\n\nexport const MuiPickersContext = React.createContext<IUtils<MaterialUiPickersDate> | null>(null);\n\nexport interface MuiPickersUtilsProviderProps {\n  utils: any;\n  children: React.ReactNode;\n  locale?: any;\n  libInstance?: any;\n}\n\nexport const MuiPickersUtilsProvider: React.FC<MuiPickersUtilsProviderProps> = ({\n  utils: Utils,\n  children,\n  locale,\n  libInstance,\n}) => {\n  const utils = React.useMemo(() => new Utils({ locale, instance: libInstance }), [\n    Utils,\n    libInstance,\n    locale,\n  ]);\n\n  return <MuiPickersContext.Provider value={utils} children={children} />;\n};\n\nMuiPickersUtilsProvider.propTypes = {\n  utils: PropTypes.func.isRequired,\n  locale: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  children: PropTypes.oneOfType([\n    PropTypes.element.isRequired,\n    PropTypes.arrayOf(PropTypes.element.isRequired),\n  ]).isRequired,\n};\n\nexport default MuiPickersUtilsProvider;\n","import { useContext } from 'react';\nimport { IUtils } from '@date-io/core/IUtils';\nimport { MaterialUiPickersDate } from '../../typings/date';\nimport { MuiPickersContext } from '../../MuiPickersUtilsProvider';\n\nexport const checkUtils = (utils: IUtils<MaterialUiPickersDate> | null | undefined) => {\n  if (!utils) {\n    // tslint:disable-next-line\n    throw new Error(\n      'Can not find utils in context. You either a) forgot to wrap your component tree in MuiPickersUtilsProvider; or b) mixed named and direct file imports.  Recommendation: use named imports from the module index.'\n    );\n  }\n};\n\nexport function useUtils() {\n  const utils = useContext(MuiPickersContext);\n  checkUtils(utils);\n\n  return utils!;\n}\n"]},"metadata":{},"sourceType":"module"}