{"ast":null,"code":"import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n/**\n * @type {React.Context<{ idPrefix: string; value: string } | null>}\n */\n\nvar Context = React.createContext(null);\n\nif (process.env.NODE_ENV !== 'production') {\n  Context.displayName = 'TabContext';\n}\n\nfunction useUniquePrefix() {\n  var _React$useState = React.useState(null),\n      id = _React$useState[0],\n      setId = _React$useState[1];\n\n  React.useEffect(function () {\n    setId(\"mui-p-\".concat(Math.round(Math.random() * 1e5)));\n  }, []);\n  return id;\n}\n\nexport default function TabContext(props) {\n  var children = props.children,\n      value = props.value;\n  var idPrefix = useUniquePrefix();\n  var context = React.useMemo(function () {\n    return {\n      idPrefix: idPrefix,\n      value: value\n    };\n  }, [idPrefix, value]);\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: context\n  }, children);\n}\nprocess.env.NODE_ENV !== \"production\" ? TabContext.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The value of the currently selected `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\n/**\n * @returns {unknown}\n */\n\nexport function useTabContext() {\n  return React.useContext(Context);\n}\nexport function getPanelId(context, value) {\n  var idPrefix = context.idPrefix;\n\n  if (idPrefix === null) {\n    return null;\n  }\n\n  return \"\".concat(context.idPrefix, \"-P-\").concat(value);\n}\nexport function getTabId(context, value) {\n  var idPrefix = context.idPrefix;\n\n  if (idPrefix === null) {\n    return null;\n  }\n\n  return \"\".concat(context.idPrefix, \"-T-\").concat(value);\n}","map":{"version":3,"sources":["/Users/mac/Documents/Projects/Scholastic-Quiz/node_modules/@material-ui/lab/esm/TabContext/TabContext.js"],"names":["React","PropTypes","Context","createContext","process","env","NODE_ENV","displayName","useUniquePrefix","_React$useState","useState","id","setId","useEffect","concat","Math","round","random","TabContext","props","children","value","idPrefix","context","useMemo","createElement","Provider","propTypes","node","string","isRequired","useTabContext","useContext","getPanelId","getTabId"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA;;;;AAIA,IAAIC,OAAO,GAAGF,KAAK,CAACG,aAAN,CAAoB,IAApB,CAAd;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCJ,EAAAA,OAAO,CAACK,WAAR,GAAsB,YAAtB;AACD;;AAED,SAASC,eAAT,GAA2B;AACzB,MAAIC,eAAe,GAAGT,KAAK,CAACU,QAAN,CAAe,IAAf,CAAtB;AAAA,MACIC,EAAE,GAAGF,eAAe,CAAC,CAAD,CADxB;AAAA,MAEIG,KAAK,GAAGH,eAAe,CAAC,CAAD,CAF3B;;AAIAT,EAAAA,KAAK,CAACa,SAAN,CAAgB,YAAY;AAC1BD,IAAAA,KAAK,CAAC,SAASE,MAAT,CAAgBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAhB,CAAD,CAAL;AACD,GAFD,EAEG,EAFH;AAGA,SAAON,EAAP;AACD;;AAED,eAAe,SAASO,UAAT,CAAoBC,KAApB,EAA2B;AACxC,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAAA,MACIC,KAAK,GAAGF,KAAK,CAACE,KADlB;AAEA,MAAIC,QAAQ,GAAGd,eAAe,EAA9B;AACA,MAAIe,OAAO,GAAGvB,KAAK,CAACwB,OAAN,CAAc,YAAY;AACtC,WAAO;AACLF,MAAAA,QAAQ,EAAEA,QADL;AAELD,MAAAA,KAAK,EAAEA;AAFF,KAAP;AAID,GALa,EAKX,CAACC,QAAD,EAAWD,KAAX,CALW,CAAd;AAMA,SAAO,aAAarB,KAAK,CAACyB,aAAN,CAAoBvB,OAAO,CAACwB,QAA5B,EAAsC;AACxDL,IAAAA,KAAK,EAAEE;AADiD,GAAtC,EAEjBH,QAFiB,CAApB;AAGD;AACDhB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCY,UAAU,CAACS,SAAX,GAAuB;AAC7D;AACA;AACA;AACA;;AAEA;;;AAGAP,EAAAA,QAAQ,EAAEnB,SAAS,CAAC2B,IATyC;;AAW7D;;;AAGAP,EAAAA,KAAK,EAAEpB,SAAS,CAAC4B,MAAV,CAAiBC;AAdqC,CAA/D,GAeI,KAAK,CAfT;AAgBA;;;;AAIA,OAAO,SAASC,aAAT,GAAyB;AAC9B,SAAO/B,KAAK,CAACgC,UAAN,CAAiB9B,OAAjB,CAAP;AACD;AACD,OAAO,SAAS+B,UAAT,CAAoBV,OAApB,EAA6BF,KAA7B,EAAoC;AACzC,MAAIC,QAAQ,GAAGC,OAAO,CAACD,QAAvB;;AAEA,MAAIA,QAAQ,KAAK,IAAjB,EAAuB;AACrB,WAAO,IAAP;AACD;;AAED,SAAO,GAAGR,MAAH,CAAUS,OAAO,CAACD,QAAlB,EAA4B,KAA5B,EAAmCR,MAAnC,CAA0CO,KAA1C,CAAP;AACD;AACD,OAAO,SAASa,QAAT,CAAkBX,OAAlB,EAA2BF,KAA3B,EAAkC;AACvC,MAAIC,QAAQ,GAAGC,OAAO,CAACD,QAAvB;;AAEA,MAAIA,QAAQ,KAAK,IAAjB,EAAuB;AACrB,WAAO,IAAP;AACD;;AAED,SAAO,GAAGR,MAAH,CAAUS,OAAO,CAACD,QAAlB,EAA4B,KAA5B,EAAmCR,MAAnC,CAA0CO,KAA1C,CAAP;AACD","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n/**\n * @type {React.Context<{ idPrefix: string; value: string } | null>}\n */\n\nvar Context = React.createContext(null);\n\nif (process.env.NODE_ENV !== 'production') {\n  Context.displayName = 'TabContext';\n}\n\nfunction useUniquePrefix() {\n  var _React$useState = React.useState(null),\n      id = _React$useState[0],\n      setId = _React$useState[1];\n\n  React.useEffect(function () {\n    setId(\"mui-p-\".concat(Math.round(Math.random() * 1e5)));\n  }, []);\n  return id;\n}\n\nexport default function TabContext(props) {\n  var children = props.children,\n      value = props.value;\n  var idPrefix = useUniquePrefix();\n  var context = React.useMemo(function () {\n    return {\n      idPrefix: idPrefix,\n      value: value\n    };\n  }, [idPrefix, value]);\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: context\n  }, children);\n}\nprocess.env.NODE_ENV !== \"production\" ? TabContext.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The value of the currently selected `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\n/**\n * @returns {unknown}\n */\n\nexport function useTabContext() {\n  return React.useContext(Context);\n}\nexport function getPanelId(context, value) {\n  var idPrefix = context.idPrefix;\n\n  if (idPrefix === null) {\n    return null;\n  }\n\n  return \"\".concat(context.idPrefix, \"-P-\").concat(value);\n}\nexport function getTabId(context, value) {\n  var idPrefix = context.idPrefix;\n\n  if (idPrefix === null) {\n    return null;\n  }\n\n  return \"\".concat(context.idPrefix, \"-T-\").concat(value);\n}"]},"metadata":{},"sourceType":"module"}